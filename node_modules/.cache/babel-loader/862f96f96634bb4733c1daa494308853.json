{"ast":null,"code":"var _jsxFileName = \"/Users/keremguventurk/Desktop/northwestern/winter2020/bme390-2/Self-Service-Database-UI/src/views/FilterPage.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n\n/*Feb. 4, 2020: fixed some warnings relating to varaible declaration*/\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col } from \"react-bootstrap\"; //import { Card } from \"components/Card/Card.jsx\";\n\nimport CustomButton from \"components/CustomButton/CustomButton\"; //import { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\n\nimport { apiBaseURL } from \"./Dashboard.jsx\";\n/*values assigned to const cannot be changed*/\n\nconst filter_categories = [\"Eye Diagnosis\", \"Systemic Diagnosis\", \"Age\", \"Ethnicity\", \"Image Procedure Type\", \"Labs\", \"Medication Generic Name\", \"Medication Therapuetic Name\", \"Vision\", \"Pressure\"];\n/*variable definitions\nfilter_categories: An array of custombuttons containing e.g. eye diagnosis, age, ethnicity, etc. \nfilter_subcategories: The items in each category constitute filter_subcategories (e.g ketorolac, etc. ), with the indexing \nfilter_subcategories_div: A list of the actual items with each subcategory box, including the checkboxes and styling itself, with the key of the array being e.g. Age\nselected_categories: A list of numbers that represent which categories were selected\nselected_values:\ncheckbox_values: \n*/\n\nclass FilterPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter_categories: [],\n      filter_subcategories: {},\n      filter_subcategories_div: {},\n      selected_categories: [],\n      selected_values: {},\n      checkbox_values: {}\n    };\n    this.getFilterCategories = this.getFilterCategories.bind(this);\n    this.getFilterSubCategories = this.getFilterSubCategories.bind(this);\n    this.createFilterSubcategoryDivs = this.createFilterSubcategoryDivs.bind(this);\n    this.getSelectedFilters = this.getSelectedFilters.bind(this);\n    this.categoryFilterPressed = this.categoryFilterPressed.bind(this);\n    this.subcategoryFilterPressed = this.subcategoryFilterPressed.bind(this);\n    this.checkBoxChanged = this.checkBoxChanged.bind(this);\n    this.resetButtonPressed = this.resetButtonPressed.bind(this);\n    this.submitButtonPressed = this.submitButtonPressed.bind(this);\n    this.isSubcategoryChecked = this.isSubcategoryChecked.bind(this);\n  }\n\n  componentDidMount() {\n    let filter_categories = this.getFilterCategories();\n    this.setState({\n      filter_categories: filter_categories\n    });\n    this.getFilterSubCategories();\n\n    if (this.props.pageStatus.FilterPage) {\n      var tempSelectedCategories = [];\n\n      for (var key in this.props.pageStatus.FilterPage) {\n        tempSelectedCategories.push(key);\n      }\n\n      this.setState({\n        selected_categories: tempSelectedCategories,\n        selected_values: this.props.pageStatus.FilterPage\n      });\n    }\n\n    setTimeout(() => {\n      this.createFilterSubcategoryDivs();\n    }, 1000);\n  } //resets all of the filters and subfilters selected\n\n\n  resetButtonPressed() {\n    this.setState({\n      selected_categories: [],\n      selected_values: {},\n      checkbox_values: {}\n    });\n  } //submits all of the filters to the patients page\n\n\n  submitButtonPressed() {\n    let temp_selected_values = this.state.selected_values;\n\n    for (var key in this.state.checkbox_values) {\n      temp_selected_values[key] = this.state.checkbox_values[key];\n    }\n\n    var tempPageStatus = this.props.pageStatus;\n    tempPageStatus[\"FilterPage\"] = temp_selected_values;\n    tempPageStatus[\"PatientsPage\"] = temp_selected_values;\n    let newState = {\n      page: \"PatientsPage\"\n      /*when button is pressed, goes to the PatientsPage*/\n      ,\n      additionalInfo: temp_selected_values,\n      pageStatus: tempPageStatus\n    };\n    this.props.changePage(newState);\n  } //function populates the side div of all avaliable categories according to filter_categories\n\n\n  getFilterCategories() {\n    var temp_filter_categories = [];\n\n    for (var i = 0; i < filter_categories.length; i++) {\n      var category_name = filter_categories[i];\n      var temp_filter_category = null;\n\n      if (this.state.selected_categories.indexOf(category_name) !== -1) {\n        temp_filter_category\n        /*selected_categories provide a list of index numbers that show which categories were selected. If selected, styles have blue background.*/\n        = React.createElement(CustomButton, {\n          style: styles.buttonDivPressed,\n          title: category_name,\n          onClick: e => this.categoryFilterPressed(e),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \" \", category_name, \" \");\n      } else {\n        temp_filter_category = React.createElement(CustomButton, {\n          style: styles.buttonDiv,\n          title: category_name,\n          onClick: e => this.categoryFilterPressed(e),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, \" \", category_name, \" \");\n      }\n\n      temp_filter_categories.push(temp_filter_category);\n    }\n\n    return temp_filter_categories;\n  } //function populates the subcategories of all filter categories by making the appropriate calls to the API\n\n\n  getFilterSubCategories() {\n    let currentComponent = this;\n\n    const axios = require(\"axios\"); //get eye diagnosis subcategories from database\n\n\n    var link = apiBaseURL + \"/ssd_api/get_distinct?special=eye_diagnosis\";\n    var autToken = \"Basic \" + btoa(this.props.accessToken + \":something\");\n    const options = {\n      url: link,\n      method: 'get',\n      headers: {\n        'Authorization': autToken\n      }\n    };\n    axios(options).then(function (response) {\n      var temp_filter_subcategories = currentComponent.state.filter_subcategories;\n      temp_filter_subcategories[\"Eye Diagnosis\"] = response.data.result.data;\n      /*stores into an array with key \"Eye Diagnosis\"*/\n\n      currentComponent.setState({\n        filter_subcategories: temp_filter_subcategories\n        /*updates the state of filter_subcategories each time*/\n\n      });\n    }).catch(function (error) {\n      console.log(error);\n    }); //get systemic diagnosis subcategories from database\n\n    var link2 = apiBaseURL + \"/ssd_api/get_distinct?special=systemic_diagnosis\";\n    const options2 = {\n      url: link2,\n      method: 'get',\n      headers: {\n        'Authorization': autToken\n      }\n    };\n    axios(options2).then(function (response) {\n      var temp_filter_subcategories = currentComponent.state.filter_subcategories;\n      temp_filter_subcategories[\"Systemic Diagnosis\"] = response.data.result.data;\n      currentComponent.setState({\n        filter_subcategories: temp_filter_subcategories\n      });\n    }).catch(function (error) {\n      console.log(error);\n    }); //put age subcategories\n\n    var temp_filter_subcategories = currentComponent.state.filter_subcategories;\n    temp_filter_subcategories[\"Age\"] = [\"less\", \"greater\", \"equal\", \"between\"];\n    currentComponent.setState({\n      filter_subcategories: temp_filter_subcategories\n    }); //put ethnicity subcategories\n\n    temp_filter_subcategories = currentComponent.state.filter_subcategories;\n    temp_filter_subcategories[\"Ethnicity\"] = [\"Hispanic or Latino\", \"Not Hispanic or Latino\", \"Declined\"];\n    currentComponent.setState({\n      filter_subcategories: temp_filter_subcategories\n    }); //get image procedure type from database\n\n    var link3 = apiBaseURL + \"/ssd_api/get_distinct?table_name=image_procedure&col_name=image_procedure\";\n    const options3 = {\n      url: link3,\n      method: 'get',\n      headers: {\n        'Authorization': autToken\n      }\n    };\n    axios(options3).then(function (response) {\n      var temp_filter_subcategories = currentComponent.state.filter_subcategories;\n      temp_filter_subcategories[\"Image Procedure Type\"] = response.data.result.data;\n      currentComponent.setState({\n        filter_subcategories: temp_filter_subcategories\n      });\n    }).catch(function (error) {\n      console.log(error);\n    }); //get lab values from database\n\n    var link4 = apiBaseURL + \"/ssd_api/get_distinct?table_name=lab_value_deid&col_name=name\";\n    const options4 = {\n      url: link4,\n      method: 'get',\n      headers: {\n        'Authorization': autToken\n      }\n    };\n    axios(options4).then(function (response) {\n      var temp_filter_subcategories = currentComponent.state.filter_subcategories;\n      temp_filter_subcategories[\"Labs\"] = response.data.result.data;\n      currentComponent.setState({\n        filter_subcategories: temp_filter_subcategories\n      });\n    }).catch(function (error) {\n      console.log(error);\n    }); //get medication generic name from database\n\n    var link5 = apiBaseURL + \"/ssd_api/get_distinct?table_name=medication_deid&col_name=generic_name\";\n    const options5 = {\n      url: link5,\n      method: 'get',\n      headers: {\n        'Authorization': autToken\n      }\n    };\n    axios(options5).then(function (response) {\n      var temp_filter_subcategories = currentComponent.state.filter_subcategories;\n      temp_filter_subcategories[\"Medication Generic Name\"] = response.data.result.data;\n      currentComponent.setState({\n        filter_subcategories: temp_filter_subcategories\n      });\n    }).catch(function (error) {\n      console.log(error);\n    }); //get medication therapuetic name from database\n\n    var link6 = apiBaseURL + \"/ssd_api/get_distinct?table_name=medication_deid&col_name=therapeutic_class\";\n    const options6 = {\n      url: link6,\n      method: 'get',\n      headers: {\n        'Authorization': autToken\n      }\n    };\n    axios(options6).then(function (response) {\n      var temp_filter_subcategories = currentComponent.state.filter_subcategories;\n      temp_filter_subcategories[\"Medication Therapuetic Name\"] = response.data.result.data;\n      currentComponent.setState({\n        filter_subcategories: temp_filter_subcategories\n      });\n    }).catch(function (error) {\n      console.log(error);\n    }); //put vision subcategories\n\n    temp_filter_subcategories = currentComponent.state.filter_subcategories;\n    temp_filter_subcategories[\"Left Vision\"] = [\"less\", \"greater\", \"equal\", \"between\"];\n    temp_filter_subcategories[\"Right Vision\"] = [\"less\", \"greater\", \"equal\", \"between\"];\n    currentComponent.setState({\n      filter_subcategories: temp_filter_subcategories\n    }); //put pressure subcategories\n\n    temp_filter_subcategories = currentComponent.state.filter_subcategories;\n    temp_filter_subcategories[\"Left Pressure\"] = [\"less\", \"greater\", \"equal\", \"between\"];\n    temp_filter_subcategories[\"Right Pressure\"] = [\"less\", \"greater\", \"equal\", \"between\"];\n    currentComponent.setState({\n      filter_subcategories: temp_filter_subcategories\n    });\n  }\n\n  isSubcategoryChecked(key, name) {\n    try {\n      if (this.state.selected_values[key].indexOf(name) !== -1) {\n        return true;\n      }\n    } catch (e) {}\n\n    try {\n      if (this.state.selected_values[key][name]) {\n        return true;\n      }\n    } catch (e) {}\n\n    return false;\n  }\n\n  createFilterSubcategoryDivs() {\n    var input_categories = [\"Age\", \"Left Vision\", \"Right Vision\", \"Left Pressure\", \"Right Pressure\"];\n    let temp_filter_subcategories_div = {}; //goes through every category (e.g Eye Diagnosis) and every subcategory (e.g retenal edema) and creates a subcategory box\n\n    for (var key in this.state.filter_subcategories) {\n      var temp_subcategories = [];\n      var temp_element;\n\n      for (var index in this.state.filter_subcategories[key]) {\n        var name = this.state.filter_subcategories[key][index]; // if the category is something like eye diagnosis or labs without less, greater, or between, then run this\n\n        if (input_categories.indexOf(key) === -1) {\n          temp_element = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 407\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            defaultChecked: this.isSubcategoryChecked(key, name),\n            title: key + \";\" + name,\n            onChange: e => this.subcategoryFilterPressed(e),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 408\n            },\n            __self: this\n          }), name); // if the category is something like age, vision, pressure, and the item is not \"between\", then run the elseif part\n        } else if (name !== \"between\") {\n          temp_element = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 419\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            defaultChecked: this.isSubcategoryChecked(key, name),\n            title: key + \";\" + name,\n            onChange: e => this.subcategoryFilterPressed(e),\n            style: styles.main_div_button_checkbox,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 420\n            },\n            __self: this\n          }), name, React.createElement(\"input\", {\n            type: \"text\",\n            defaultChecked: this.isSubcategoryChecked(key, name),\n            title: key + \";\" + name,\n            onChange: e => this.checkBoxChanged(e),\n            style: styles.main_div_button_text,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 428\n            },\n            __self: this\n          })); // If there is \"between\", then need a checkbox and two textboxes (in contrast to one textbox)\n        } else {\n          temp_element = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 439\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            defaultChecked: this.isSubcategoryChecked(key, name),\n            title: key + \";\" + name,\n            onChange: e => this.subcategoryFilterPressed(e),\n            style: styles.main_div_button_checkbox,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 440\n            },\n            __self: this\n          }), name, React.createElement(\"input\", {\n            type: \"text\",\n            title: key + \";\" + name + \" less\",\n            onChange: e => this.checkBoxChanged(e),\n            style: styles.main_div_button_text,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 448\n            },\n            __self: this\n          }), \"and\", React.createElement(\"input\", {\n            type: \"text\",\n            title: key + \";\" + name + \" greater\",\n            onChange: e => this.checkBoxChanged(e),\n            style: styles.main_div_button_text,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 455\n            },\n            __self: this\n          }));\n        }\n\n        temp_subcategories.push(temp_element);\n      }\n\n      temp_filter_subcategories_div[key] = React.createElement(Col, {\n        lg: 3,\n        sm: 4,\n        style: styles.mainDivCategoryStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: styles.mainDivButtonTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, key), \" \", temp_subcategories, \" \");\n    }\n\n    this.setState({\n      filter_subcategories_div: temp_filter_subcategories_div\n    });\n  } //returns an array of selected categories. In the case that it is either vision or pressure, add both left and right to each push.\n\n\n  getSelectedFilters() {\n    var chosen_categories = [];\n\n    for (var i = 0; i < this.state.selected_categories.length; i++) {\n      var name = this.state.selected_categories[i];\n\n      if (name === \"Vision\") {\n        chosen_categories.push(this.state.filter_subcategories_div[\"Left Vision\"]);\n        chosen_categories.push(this.state.filter_subcategories_div[\"Right Vision\"]);\n      } else if (name === \"Pressure\") {\n        chosen_categories.push(this.state.filter_subcategories_div[\"Left Pressure\"]);\n        chosen_categories.push(this.state.filter_subcategories_div[\"Right Pressure\"]);\n      } else {\n        chosen_categories.push(this.state.filter_subcategories_div[name]);\n      }\n    }\n\n    return chosen_categories;\n  } //updates state.selected_categories according to categories selected\n\n\n  categoryFilterPressed(e) {\n    let category = e.target.title;\n\n    if (this.state.selected_categories.indexOf(category) === -1) {\n      this.state.selected_categories.push(category);\n      this.setState({\n        selected_categories: this.state.selected_categories\n      });\n    } else {\n      var new_list = this.state.selected_categories.filter(function (name) {\n        return name !== category;\n      });\n      this.setState({\n        selected_categories: new_list\n      });\n    }\n  } //updates state.selected_values according to subcategories selected: subcategory filters showing up on website, etc\n\n\n  subcategoryFilterPressed(e) {\n    let event = e.target.title;\n    let values = event.split(\";\");\n    let category = values[0];\n    let value = values[1];\n\n    if (!this.state.selected_values[category]) {\n      /*edited due to warning*/\n      var temp_selected_values = this.state.selected_values;\n      temp_selected_values[category] = [value];\n      this.setState({\n        selected_values: temp_selected_values\n      });\n      /*\n      this.state.selected_values[category] = [value];\n      this.setState({\n        selected_values: this.state.selected_values\n      });*/\n    } else if (this.state.selected_values[category].indexOf(value) === -1) {\n      this.state.selected_values[category].push(value);\n      this.setState({\n        selected_values: this.state.selected_values\n      });\n    } else {\n      var temp_list = this.state.selected_values[category].filter(function (name) {\n        return name !== value;\n      });\n      var new_list = this.state.selected_values;\n      new_list[category] = temp_list;\n      this.setState({\n        selected_values: new_list\n      });\n    }\n  } //updates checkbox_values according to checkbox changed: individual checkboxes in each subcategory\n\n\n  checkBoxChanged(e) {\n    let value = e.target.value;\n    let cat_and_sub = e.target.title.split(\";\");\n    let category = cat_and_sub[0];\n    let subcategory = cat_and_sub[1];\n    console.log(\"CHECKBOX CHANGED\", value, category, subcategory);\n    let temp_checkbox = this.state.checkbox_values;\n\n    if (!temp_checkbox[category]) {\n      temp_checkbox[category] = {\n        [subcategory]: value\n      };\n    } else {\n      temp_checkbox[category][subcategory] = value;\n    }\n\n    this.setState({\n      checkbox_values: temp_checkbox\n    });\n  }\n\n  createLegend(json) {\n    var legend = [];\n\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(React.createElement(\"i\", {\n        className: type,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      }));\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n\n    return legend;\n  }\n\n  render() {\n    console.log(\"state\", this.state);\n    let filter_categories = this.getFilterCategories();\n    var chosen_filters = this.getSelectedFilters();\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: styles.titleStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 12,\n      sm: 8,\n      style: styles.titleText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    }, \"Please Select Your Filters to Create a Patient Cohort\"))), React.createElement(Row, {\n      style: styles.underTitleStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      style: styles.buttonUpperSubmit,\n      onClick: () => this.submitButtonPressed(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606\n      },\n      __self: this\n    }, \"SUBMIT\"), React.createElement(CustomButton, {\n      style: styles.buttonUpperReset,\n      onClick: () => this.resetButtonPressed(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    }, \"RESET\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 3,\n      sm: 3,\n      style: styles.sideDivStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }, filter_categories), React.createElement(Col, {\n      lg: 9,\n      sm: 6,\n      style: styles.mainDivStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }, chosen_filters))))));\n  }\n\n}\n\nexport default FilterPage;\nconst styles = {\n  titleStyle: {\n    height: \"10vh\",\n    \"margin-bottom\": \"2vh\"\n  },\n  titleText: {\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"center\",\n    \"font-weight\": \"bold\",\n    \"font-size\": \"30px\"\n  },\n  buttonDiv: {\n    width: \"100%\",\n    margin: \"1vh\",\n    \"background-color\": \"white\",\n    color: \"black\",\n    border: \"solid 2px black\"\n  },\n  buttonDivPressed: {\n    width: \"100%\",\n    margin: \"1vh\",\n    \"background-color\": \"#78deec\",\n    color: \"black\",\n    border: \"solid 2px black\"\n  },\n  sideDivStyle: {\n    height: \"80vh\"\n  },\n  mainDivStyle: {\n    height: \"90vh\"\n  },\n  mainDivCategoryStyle: {\n    height: \"20vh\",\n    overflow: \"scroll\",\n    border: \"solid 2px black\",\n    margin: \"1vh\"\n  },\n  mainDivButtonTitle: {\n    display: \"flex\",\n    \"justify-content\": \"center\",\n    \"font-weight\": \"bold\",\n    \"text-decoration\": \"underline\"\n  },\n  underTitleStyle: {\n    display: \"flex\",\n    \"justify-content\": \"flex-end\",\n    \"align-items\": \"flex-end\",\n    \"padding-right\": \"16%\"\n  },\n  buttonUpperSubmit: {\n    width: \"12em\",\n    \"margin-right\": \"1vh\",\n    color: \"black\",\n    border: \"solid 2px black\",\n    \"font-weight\": \"bold\",\n    \"background-color\": \"#a3ec9a\"\n  },\n  buttonUpperReset: {\n    width: \"12em\",\n    \"margin-right\": \"1vh\",\n    color: \"black\",\n    border: \"solid 2px black\",\n    \"font-weight\": \"bold\",\n    \"background-color\": \"#ec585a\"\n  }\n};","map":{"version":3,"sources":["/Users/keremguventurk/Desktop/northwestern/winter2020/bme390-2/Self-Service-Database-UI/src/views/FilterPage.jsx"],"names":["React","Component","Grid","Row","Col","CustomButton","apiBaseURL","filter_categories","FilterPage","constructor","props","state","filter_subcategories","filter_subcategories_div","selected_categories","selected_values","checkbox_values","getFilterCategories","bind","getFilterSubCategories","createFilterSubcategoryDivs","getSelectedFilters","categoryFilterPressed","subcategoryFilterPressed","checkBoxChanged","resetButtonPressed","submitButtonPressed","isSubcategoryChecked","componentDidMount","setState","pageStatus","tempSelectedCategories","key","push","setTimeout","temp_selected_values","tempPageStatus","newState","page","additionalInfo","changePage","temp_filter_categories","i","length","category_name","temp_filter_category","indexOf","styles","buttonDivPressed","e","buttonDiv","currentComponent","axios","require","link","autToken","btoa","accessToken","options","url","method","headers","then","response","temp_filter_subcategories","data","result","catch","error","console","log","link2","options2","link3","options3","link4","options4","link5","options5","link6","options6","name","input_categories","temp_filter_subcategories_div","temp_subcategories","temp_element","index","main_div_button_checkbox","main_div_button_text","mainDivCategoryStyle","mainDivButtonTitle","chosen_categories","category","target","title","new_list","filter","event","values","split","value","temp_list","cat_and_sub","subcategory","temp_checkbox","createLegend","json","legend","type","render","chosen_filters","titleStyle","titleText","underTitleStyle","buttonUpperSubmit","buttonUpperReset","sideDivStyle","mainDivStyle","height","display","width","margin","color","border","overflow"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;AAkBA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,QAA+B,iBAA/B,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,sCAAzB,C,CACA;;AAEA,SAASC,UAAT,QAA2B,iBAA3B;AAEA;;AACA,MAAMC,iBAAiB,GAAG,CACxB,eADwB,EAExB,oBAFwB,EAGxB,KAHwB,EAIxB,WAJwB,EAKxB,sBALwB,EAMxB,MANwB,EAOxB,yBAPwB,EAQxB,6BARwB,EASxB,QATwB,EAUxB,UAVwB,CAA1B;AAaA;;;;;;;;;AAQA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AACjCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXJ,MAAAA,iBAAiB,EAAE,EADR;AAEXK,MAAAA,oBAAoB,EAAE,EAFX;AAGXC,MAAAA,wBAAwB,EAAE,EAHf;AAIXC,MAAAA,mBAAmB,EAAE,EAJV;AAKXC,MAAAA,eAAe,EAAE,EALN;AAMXC,MAAAA,eAAe,EAAE;AANN,KAAb;AAQA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKE,2BAAL,GAAmC,KAAKA,2BAAL,CAAiCF,IAAjC,CACjC,IADiC,CAAnC;AAGA,SAAKG,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBH,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKI,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BJ,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKK,wBAAL,GAAgC,KAAKA,wBAAL,CAA8BL,IAA9B,CAAmC,IAAnC,CAAhC;AACA,SAAKM,eAAL,GAAuB,KAAKA,eAAL,CAAqBN,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKO,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBP,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKQ,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBR,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKS,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BT,IAA1B,CAA+B,IAA/B,CAA5B;AACD;;AAEDU,EAAAA,iBAAiB,GAAG;AAClB,QAAIrB,iBAAiB,GAAG,KAAKU,mBAAL,EAAxB;AACA,SAAKY,QAAL,CAAc;AACZtB,MAAAA,iBAAiB,EAAEA;AADP,KAAd;AAGA,SAAKY,sBAAL;;AACA,QAAI,KAAKT,KAAL,CAAWoB,UAAX,CAAsBtB,UAA1B,EAAsC;AACpC,UAAIuB,sBAAsB,GAAG,EAA7B;;AACA,WAAK,IAAIC,GAAT,IAAgB,KAAKtB,KAAL,CAAWoB,UAAX,CAAsBtB,UAAtC,EAAkD;AAChDuB,QAAAA,sBAAsB,CAACE,IAAvB,CAA4BD,GAA5B;AACD;;AACD,WAAKH,QAAL,CAAc;AACZf,QAAAA,mBAAmB,EAAEiB,sBADT;AAEZhB,QAAAA,eAAe,EAAE,KAAKL,KAAL,CAAWoB,UAAX,CAAsBtB;AAF3B,OAAd;AAID;;AACD0B,IAAAA,UAAU,CAAC,MAAM;AACf,WAAKd,2BAAL;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GA5CgC,CA8CjC;;;AACAK,EAAAA,kBAAkB,GAAG;AACnB,SAAKI,QAAL,CAAc;AACZf,MAAAA,mBAAmB,EAAE,EADT;AAEZC,MAAAA,eAAe,EAAE,EAFL;AAGZC,MAAAA,eAAe,EAAE;AAHL,KAAd;AAKD,GArDgC,CAuDjC;;;AACAU,EAAAA,mBAAmB,GAAG;AACpB,QAAIS,oBAAoB,GAAG,KAAKxB,KAAL,CAAWI,eAAtC;;AACA,SAAK,IAAIiB,GAAT,IAAgB,KAAKrB,KAAL,CAAWK,eAA3B,EAA4C;AAC1CmB,MAAAA,oBAAoB,CAACH,GAAD,CAApB,GAA4B,KAAKrB,KAAL,CAAWK,eAAX,CAA2BgB,GAA3B,CAA5B;AACD;;AACD,QAAII,cAAc,GAAG,KAAK1B,KAAL,CAAWoB,UAAhC;AACAM,IAAAA,cAAc,CAAC,YAAD,CAAd,GAA+BD,oBAA/B;AACAC,IAAAA,cAAc,CAAC,cAAD,CAAd,GAAiCD,oBAAjC;AACA,QAAIE,QAAQ,GAAG;AACbC,MAAAA,IAAI,EAAE;AAAe;AADR;AAEbC,MAAAA,cAAc,EAAEJ,oBAFH;AAGbL,MAAAA,UAAU,EAAEM;AAHC,KAAf;AAKA,SAAK1B,KAAL,CAAW8B,UAAX,CAAsBH,QAAtB;AACD,GAtEgC,CAwEjC;;;AACApB,EAAAA,mBAAmB,GAAG;AACpB,QAAIwB,sBAAsB,GAAG,EAA7B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnC,iBAAiB,CAACoC,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AACjD,UAAIE,aAAa,GAAGrC,iBAAiB,CAACmC,CAAD,CAArC;AACA,UAAIG,oBAAoB,GAAG,IAA3B;;AACA,UAAI,KAAKlC,KAAL,CAAWG,mBAAX,CAA+BgC,OAA/B,CAAuCF,aAAvC,MAA0D,CAAC,CAA/D,EAAkE;AAChEC,QAAAA;AAAqB;AAAD,UAClB,oBAAC,YAAD;AACE,UAAA,KAAK,EAAEE,MAAM,CAACC,gBADhB;AAEE,UAAA,KAAK,EAAEJ,aAFT;AAGE,UAAA,OAAO,EAAEK,CAAC,IAAI,KAAK3B,qBAAL,CAA2B2B,CAA3B,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKG,GALH,EAMGL,aANH,EAMkB,GANlB,CADF;AAUD,OAXD,MAWO;AACLC,QAAAA,oBAAoB,GAClB,oBAAC,YAAD;AACE,UAAA,KAAK,EAAEE,MAAM,CAACG,SADhB;AAEE,UAAA,KAAK,EAAEN,aAFT;AAGE,UAAA,OAAO,EAAEK,CAAC,IAAI,KAAK3B,qBAAL,CAA2B2B,CAA3B,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKG,GALH,EAMGL,aANH,EAMkB,GANlB,CADF;AAUD;;AACDH,MAAAA,sBAAsB,CAACR,IAAvB,CAA4BY,oBAA5B;AACD;;AACD,WAAOJ,sBAAP;AACD,GAxGgC,CA0GjC;;;AACAtB,EAAAA,sBAAsB,GAAG;AACvB,QAAIgC,gBAAgB,GAAG,IAAvB;;AACA,UAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,CAFuB,CAIvB;;;AACA,QAAIC,IAAI,GAAGhD,UAAU,GAAG,6CAAxB;AACA,QAAIiD,QAAQ,GAAG,WAAWC,IAAI,CAAC,KAAK9C,KAAL,CAAW+C,WAAX,GAAyB,YAA1B,CAA9B;AAEA,UAAMC,OAAO,GAAG;AACdC,MAAAA,GAAG,EAAEL,IADS;AAEdM,MAAAA,MAAM,EAAE,KAFM;AAGdC,MAAAA,OAAO,EAAE;AACP,yBAAiBN;AADV;AAHK,KAAhB;AAQAH,IAAAA,KAAK,CAACM,OAAD,CAAL,CACGI,IADH,CACQ,UAAUC,QAAV,EAAoB;AACxB,UAAIC,yBAAyB,GAC3Bb,gBAAgB,CAACxC,KAAjB,CAAuBC,oBADzB;AAEAoD,MAAAA,yBAAyB,CAAC,eAAD,CAAzB,GACED,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAqBD,IADvB;AAC6B;;AAC7Bd,MAAAA,gBAAgB,CAACtB,QAAjB,CAA0B;AACxBjB,QAAAA,oBAAoB,EAAEoD;AAA0B;;AADxB,OAA1B;AAGD,KATH,EAUGG,KAVH,CAUS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAZH,EAhBuB,CA8BvB;;AACA,QAAIG,KAAK,GAAGjE,UAAU,GAAG,kDAAzB;AAEA,UAAMkE,QAAQ,GAAG;AACfb,MAAAA,GAAG,EAAEY,KADU;AAEfX,MAAAA,MAAM,EAAE,KAFO;AAGfC,MAAAA,OAAO,EAAE;AACP,yBAAiBN;AADV;AAHM,KAAjB;AAOAH,IAAAA,KAAK,CAACoB,QAAD,CAAL,CACGV,IADH,CACQ,UAAUC,QAAV,EAAoB;AACxB,UAAIC,yBAAyB,GAC3Bb,gBAAgB,CAACxC,KAAjB,CAAuBC,oBADzB;AAEAoD,MAAAA,yBAAyB,CAAC,oBAAD,CAAzB,GACED,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAqBD,IADvB;AAEAd,MAAAA,gBAAgB,CAACtB,QAAjB,CAA0B;AACxBjB,QAAAA,oBAAoB,EAAEoD;AADE,OAA1B;AAGD,KATH,EAUGG,KAVH,CAUS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAZH,EAxCuB,CAsDvB;;AACA,QAAIJ,yBAAyB,GAAGb,gBAAgB,CAACxC,KAAjB,CAAuBC,oBAAvD;AACAoD,IAAAA,yBAAyB,CAAC,KAAD,CAAzB,GAAmC,CAAC,MAAD,EAAS,SAAT,EAAoB,OAApB,EAA6B,SAA7B,CAAnC;AACAb,IAAAA,gBAAgB,CAACtB,QAAjB,CAA0B;AACxBjB,MAAAA,oBAAoB,EAAEoD;AADE,KAA1B,EAzDuB,CA6DvB;;AACAA,IAAAA,yBAAyB,GAAGb,gBAAgB,CAACxC,KAAjB,CAAuBC,oBAAnD;AACAoD,IAAAA,yBAAyB,CAAC,WAAD,CAAzB,GAAyC,CACvC,oBADuC,EAEvC,wBAFuC,EAGvC,UAHuC,CAAzC;AAKAb,IAAAA,gBAAgB,CAACtB,QAAjB,CAA0B;AACxBjB,MAAAA,oBAAoB,EAAEoD;AADE,KAA1B,EApEuB,CAwEvB;;AACA,QAAIS,KAAK,GACPnE,UAAU,GACV,2EAFF;AAIA,UAAMoE,QAAQ,GAAG;AACff,MAAAA,GAAG,EAAEc,KADU;AAEfb,MAAAA,MAAM,EAAE,KAFO;AAGfC,MAAAA,OAAO,EAAE;AACP,yBAAiBN;AADV;AAHM,KAAjB;AAOAH,IAAAA,KAAK,CAACsB,QAAD,CAAL,CACGZ,IADH,CACQ,UAAUC,QAAV,EAAoB;AACxB,UAAIC,yBAAyB,GAC3Bb,gBAAgB,CAACxC,KAAjB,CAAuBC,oBADzB;AAEAoD,MAAAA,yBAAyB,CAAC,sBAAD,CAAzB,GACED,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAqBD,IADvB;AAEAd,MAAAA,gBAAgB,CAACtB,QAAjB,CAA0B;AACxBjB,QAAAA,oBAAoB,EAAEoD;AADE,OAA1B;AAGD,KATH,EAUGG,KAVH,CAUS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAZH,EApFuB,CAkGvB;;AACA,QAAIO,KAAK,GACPrE,UAAU,GACV,+DAFF;AAIA,UAAMsE,QAAQ,GAAG;AACfjB,MAAAA,GAAG,EAAEgB,KADU;AAEff,MAAAA,MAAM,EAAE,KAFO;AAGfC,MAAAA,OAAO,EAAE;AACP,yBAAiBN;AADV;AAHM,KAAjB;AAQAH,IAAAA,KAAK,CAACwB,QAAD,CAAL,CACGd,IADH,CACQ,UAAUC,QAAV,EAAoB;AACxB,UAAIC,yBAAyB,GAC3Bb,gBAAgB,CAACxC,KAAjB,CAAuBC,oBADzB;AAEAoD,MAAAA,yBAAyB,CAAC,MAAD,CAAzB,GAAoCD,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAqBD,IAAzD;AACAd,MAAAA,gBAAgB,CAACtB,QAAjB,CAA0B;AACxBjB,QAAAA,oBAAoB,EAAEoD;AADE,OAA1B;AAGD,KARH,EASGG,KATH,CASS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAXH,EA/GuB,CA4HvB;;AACA,QAAIS,KAAK,GACPvE,UAAU,GACV,wEAFF;AAIA,UAAMwE,QAAQ,GAAG;AACfnB,MAAAA,GAAG,EAAEkB,KADU;AAEfjB,MAAAA,MAAM,EAAE,KAFO;AAGfC,MAAAA,OAAO,EAAE;AACP,yBAAiBN;AADV;AAHM,KAAjB;AAQAH,IAAAA,KAAK,CAAC0B,QAAD,CAAL,CACGhB,IADH,CACQ,UAAUC,QAAV,EAAoB;AACxB,UAAIC,yBAAyB,GAC3Bb,gBAAgB,CAACxC,KAAjB,CAAuBC,oBADzB;AAEAoD,MAAAA,yBAAyB,CAAC,yBAAD,CAAzB,GACED,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAqBD,IADvB;AAEAd,MAAAA,gBAAgB,CAACtB,QAAjB,CAA0B;AACxBjB,QAAAA,oBAAoB,EAAEoD;AADE,OAA1B;AAGD,KATH,EAUGG,KAVH,CAUS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAZH,EAzIuB,CAuJvB;;AACA,QAAIW,KAAK,GACPzE,UAAU,GACV,6EAFF;AAIA,UAAM0E,QAAQ,GAAG;AACfrB,MAAAA,GAAG,EAAEoB,KADU;AAEfnB,MAAAA,MAAM,EAAE,KAFO;AAGfC,MAAAA,OAAO,EAAE;AACP,yBAAiBN;AADV;AAHM,KAAjB;AAOAH,IAAAA,KAAK,CAAC4B,QAAD,CAAL,CACGlB,IADH,CACQ,UAAUC,QAAV,EAAoB;AACxB,UAAIC,yBAAyB,GAC3Bb,gBAAgB,CAACxC,KAAjB,CAAuBC,oBADzB;AAEAoD,MAAAA,yBAAyB,CAAC,6BAAD,CAAzB,GACED,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAqBD,IADvB;AAEAd,MAAAA,gBAAgB,CAACtB,QAAjB,CAA0B;AACxBjB,QAAAA,oBAAoB,EAAEoD;AADE,OAA1B;AAGD,KATH,EAUGG,KAVH,CAUS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAZH,EAnKuB,CAiLvB;;AACAJ,IAAAA,yBAAyB,GAAGb,gBAAgB,CAACxC,KAAjB,CAAuBC,oBAAnD;AACAoD,IAAAA,yBAAyB,CAAC,aAAD,CAAzB,GAA2C,CACzC,MADyC,EAEzC,SAFyC,EAGzC,OAHyC,EAIzC,SAJyC,CAA3C;AAMAA,IAAAA,yBAAyB,CAAC,cAAD,CAAzB,GAA4C,CAC1C,MAD0C,EAE1C,SAF0C,EAG1C,OAH0C,EAI1C,SAJ0C,CAA5C;AAMAb,IAAAA,gBAAgB,CAACtB,QAAjB,CAA0B;AACxBjB,MAAAA,oBAAoB,EAAEoD;AADE,KAA1B,EA/LuB,CAmMvB;;AACAA,IAAAA,yBAAyB,GAAGb,gBAAgB,CAACxC,KAAjB,CAAuBC,oBAAnD;AACAoD,IAAAA,yBAAyB,CAAC,eAAD,CAAzB,GAA6C,CAC3C,MAD2C,EAE3C,SAF2C,EAG3C,OAH2C,EAI3C,SAJ2C,CAA7C;AAMAA,IAAAA,yBAAyB,CAAC,gBAAD,CAAzB,GAA8C,CAC5C,MAD4C,EAE5C,SAF4C,EAG5C,OAH4C,EAI5C,SAJ4C,CAA9C;AAMAb,IAAAA,gBAAgB,CAACtB,QAAjB,CAA0B;AACxBjB,MAAAA,oBAAoB,EAAEoD;AADE,KAA1B;AAGD;;AAEDrC,EAAAA,oBAAoB,CAACK,GAAD,EAAMiD,IAAN,EAAY;AAC9B,QAAI;AACF,UAAI,KAAKtE,KAAL,CAAWI,eAAX,CAA2BiB,GAA3B,EAAgCc,OAAhC,CAAwCmC,IAAxC,MAAkD,CAAC,CAAvD,EAA0D;AACxD,eAAO,IAAP;AACD;AACF,KAJD,CAKA,OAAOhC,CAAP,EAAU,CAAG;;AACb,QAAI;AACF,UAAI,KAAKtC,KAAL,CAAWI,eAAX,CAA2BiB,GAA3B,EAAgCiD,IAAhC,CAAJ,EAA2C;AACzC,eAAO,IAAP;AACD;AACF,KAJD,CAKA,OAAOhC,CAAP,EAAU,CAAG;;AACb,WAAO,KAAP;AACD;;AAED7B,EAAAA,2BAA2B,GAAG;AAC5B,QAAI8D,gBAAgB,GAAG,CACrB,KADqB,EAErB,aAFqB,EAGrB,cAHqB,EAIrB,eAJqB,EAKrB,gBALqB,CAAvB;AAOA,QAAIC,6BAA6B,GAAG,EAApC,CAR4B,CAS5B;;AACA,SAAK,IAAInD,GAAT,IAAgB,KAAKrB,KAAL,CAAWC,oBAA3B,EAAiD;AAC/C,UAAIwE,kBAAkB,GAAG,EAAzB;AACA,UAAIC,YAAJ;;AACA,WAAK,IAAIC,KAAT,IAAkB,KAAK3E,KAAL,CAAWC,oBAAX,CAAgCoB,GAAhC,CAAlB,EAAwD;AACtD,YAAIiD,IAAI,GAAG,KAAKtE,KAAL,CAAWC,oBAAX,CAAgCoB,GAAhC,EAAqCsD,KAArC,CAAX,CADsD,CAEtD;;AACA,YAAIJ,gBAAgB,CAACpC,OAAjB,CAAyBd,GAAzB,MAAkC,CAAC,CAAvC,EAA0C;AACxCqD,UAAAA,YAAY,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,cAAc,EAAE,KAAK1D,oBAAL,CAA0BK,GAA1B,EAA+BiD,IAA/B,CAFlB;AAGE,YAAA,KAAK,EAAEjD,GAAG,GAAG,GAAN,GAAYiD,IAHrB;AAIE,YAAA,QAAQ,EAAEhC,CAAC,IAAI,KAAK1B,wBAAL,CAA8B0B,CAA9B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOGgC,IAPH,CADF,CADwC,CAWrC;AACJ,SAZD,MAYO,IAAIA,IAAI,KAAK,SAAb,EAAwB;AAC7BI,UAAAA,YAAY,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,cAAc,EAAE,KAAK1D,oBAAL,CAA0BK,GAA1B,EAA+BiD,IAA/B,CAFlB;AAGE,YAAA,KAAK,EAAEjD,GAAG,GAAG,GAAN,GAAYiD,IAHrB;AAIE,YAAA,QAAQ,EAAEhC,CAAC,IAAI,KAAK1B,wBAAL,CAA8B0B,CAA9B,CAJjB;AAKE,YAAA,KAAK,EAAEF,MAAM,CAACwC,wBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAQGN,IARH,EASE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,cAAc,EAAE,KAAKtD,oBAAL,CAA0BK,GAA1B,EAA+BiD,IAA/B,CAFlB;AAGE,YAAA,KAAK,EAAEjD,GAAG,GAAG,GAAN,GAAYiD,IAHrB;AAIE,YAAA,QAAQ,EAAEhC,CAAC,IAAI,KAAKzB,eAAL,CAAqByB,CAArB,CAJjB;AAKE,YAAA,KAAK,EAAEF,MAAM,CAACyC,oBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CADF,CAD6B,CAmB1B;AACJ,SApBM,MAoBA;AACLH,UAAAA,YAAY,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,cAAc,EAAE,KAAK1D,oBAAL,CAA0BK,GAA1B,EAA+BiD,IAA/B,CAFlB;AAGE,YAAA,KAAK,EAAEjD,GAAG,GAAG,GAAN,GAAYiD,IAHrB;AAIE,YAAA,QAAQ,EAAEhC,CAAC,IAAI,KAAK1B,wBAAL,CAA8B0B,CAA9B,CAJjB;AAKE,YAAA,KAAK,EAAEF,MAAM,CAACwC,wBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAQGN,IARH,EASE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,KAAK,EAAEjD,GAAG,GAAG,GAAN,GAAYiD,IAAZ,GAAmB,OAF5B;AAGE,YAAA,QAAQ,EAAEhC,CAAC,IAAI,KAAKzB,eAAL,CAAqByB,CAArB,CAHjB;AAIE,YAAA,KAAK,EAAEF,MAAM,CAACyC,oBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,SAgBE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,KAAK,EAAExD,GAAG,GAAG,GAAN,GAAYiD,IAAZ,GAAmB,UAF5B;AAGE,YAAA,QAAQ,EAAEhC,CAAC,IAAI,KAAKzB,eAAL,CAAqByB,CAArB,CAHjB;AAIE,YAAA,KAAK,EAAEF,MAAM,CAACyC,oBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,CADF;AAyBD;;AACDJ,QAAAA,kBAAkB,CAACnD,IAAnB,CAAwBoD,YAAxB;AACD;;AACDF,MAAAA,6BAA6B,CAACnD,GAAD,CAA7B,GACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,KAAK,EAAEe,MAAM,CAAC0C,oBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAE1C,MAAM,CAAC2C,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwC1D,GAAxC,CADF,EACqD,GADrD,EAGGoD,kBAHH,EAGuB,GAHvB,CADF;AAQD;;AACD,SAAKvD,QAAL,CAAc;AACZhB,MAAAA,wBAAwB,EAAEsE;AADd,KAAd;AAGD,GA1agC,CA2ajC;;;AACA9D,EAAAA,kBAAkB,GAAG;AACnB,QAAIsE,iBAAiB,GAAG,EAAxB;;AACA,SAAK,IAAIjD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK/B,KAAL,CAAWG,mBAAX,CAA+B6B,MAAnD,EAA2DD,CAAC,EAA5D,EAAgE;AAC9D,UAAIuC,IAAI,GAAG,KAAKtE,KAAL,CAAWG,mBAAX,CAA+B4B,CAA/B,CAAX;;AACA,UAAIuC,IAAI,KAAK,QAAb,EAAuB;AACrBU,QAAAA,iBAAiB,CAAC1D,IAAlB,CACE,KAAKtB,KAAL,CAAWE,wBAAX,CAAoC,aAApC,CADF;AAGA8E,QAAAA,iBAAiB,CAAC1D,IAAlB,CACE,KAAKtB,KAAL,CAAWE,wBAAX,CAAoC,cAApC,CADF;AAGD,OAPD,MAOO,IAAIoE,IAAI,KAAK,UAAb,EAAyB;AAC9BU,QAAAA,iBAAiB,CAAC1D,IAAlB,CACE,KAAKtB,KAAL,CAAWE,wBAAX,CAAoC,eAApC,CADF;AAGA8E,QAAAA,iBAAiB,CAAC1D,IAAlB,CACE,KAAKtB,KAAL,CAAWE,wBAAX,CAAoC,gBAApC,CADF;AAGD,OAPM,MAOA;AACL8E,QAAAA,iBAAiB,CAAC1D,IAAlB,CAAuB,KAAKtB,KAAL,CAAWE,wBAAX,CAAoCoE,IAApC,CAAvB;AACD;AACF;;AACD,WAAOU,iBAAP;AACD,GAncgC,CAqcjC;;;AACArE,EAAAA,qBAAqB,CAAC2B,CAAD,EAAI;AACvB,QAAI2C,QAAQ,GAAG3C,CAAC,CAAC4C,MAAF,CAASC,KAAxB;;AACA,QAAI,KAAKnF,KAAL,CAAWG,mBAAX,CAA+BgC,OAA/B,CAAuC8C,QAAvC,MAAqD,CAAC,CAA1D,EAA6D;AAC3D,WAAKjF,KAAL,CAAWG,mBAAX,CAA+BmB,IAA/B,CAAoC2D,QAApC;AACA,WAAK/D,QAAL,CAAc;AACZf,QAAAA,mBAAmB,EAAE,KAAKH,KAAL,CAAWG;AADpB,OAAd;AAGD,KALD,MAKO;AACL,UAAIiF,QAAQ,GAAG,KAAKpF,KAAL,CAAWG,mBAAX,CAA+BkF,MAA/B,CAAsC,UAAUf,IAAV,EAAgB;AACnE,eAAOA,IAAI,KAAKW,QAAhB;AACD,OAFc,CAAf;AAGA,WAAK/D,QAAL,CAAc;AACZf,QAAAA,mBAAmB,EAAEiF;AADT,OAAd;AAGD;AACF,GArdgC,CAudjC;;;AACAxE,EAAAA,wBAAwB,CAAC0B,CAAD,EAAI;AAC1B,QAAIgD,KAAK,GAAGhD,CAAC,CAAC4C,MAAF,CAASC,KAArB;AACA,QAAII,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAb;AACA,QAAIP,QAAQ,GAAGM,MAAM,CAAC,CAAD,CAArB;AACA,QAAIE,KAAK,GAAGF,MAAM,CAAC,CAAD,CAAlB;;AACA,QAAI,CAAC,KAAKvF,KAAL,CAAWI,eAAX,CAA2B6E,QAA3B,CAAL,EAA2C;AACzC;AACA,UAAIzD,oBAAoB,GAAG,KAAKxB,KAAL,CAAWI,eAAtC;AACAoB,MAAAA,oBAAoB,CAACyD,QAAD,CAApB,GAAiC,CAACQ,KAAD,CAAjC;AACA,WAAKvE,QAAL,CAAc;AACZd,QAAAA,eAAe,EAAEoB;AADL,OAAd;AAGA;;;;;AAKD,KAZD,MAYO,IAAI,KAAKxB,KAAL,CAAWI,eAAX,CAA2B6E,QAA3B,EAAqC9C,OAArC,CAA6CsD,KAA7C,MAAwD,CAAC,CAA7D,EAAgE;AACrE,WAAKzF,KAAL,CAAWI,eAAX,CAA2B6E,QAA3B,EAAqC3D,IAArC,CAA0CmE,KAA1C;AACA,WAAKvE,QAAL,CAAc;AACZd,QAAAA,eAAe,EAAE,KAAKJ,KAAL,CAAWI;AADhB,OAAd;AAGD,KALM,MAKA;AACL,UAAIsF,SAAS,GAAG,KAAK1F,KAAL,CAAWI,eAAX,CAA2B6E,QAA3B,EAAqCI,MAArC,CAA4C,UAC1Df,IAD0D,EAE1D;AACA,eAAOA,IAAI,KAAKmB,KAAhB;AACD,OAJe,CAAhB;AAKA,UAAIL,QAAQ,GAAG,KAAKpF,KAAL,CAAWI,eAA1B;AACAgF,MAAAA,QAAQ,CAACH,QAAD,CAAR,GAAqBS,SAArB;AACA,WAAKxE,QAAL,CAAc;AACZd,QAAAA,eAAe,EAAEgF;AADL,OAAd;AAGD;AACF,GA1fgC,CA4fjC;;;AACAvE,EAAAA,eAAe,CAACyB,CAAD,EAAI;AACjB,QAAImD,KAAK,GAAGnD,CAAC,CAAC4C,MAAF,CAASO,KAArB;AACA,QAAIE,WAAW,GAAGrD,CAAC,CAAC4C,MAAF,CAASC,KAAT,CAAeK,KAAf,CAAqB,GAArB,CAAlB;AACA,QAAIP,QAAQ,GAAGU,WAAW,CAAC,CAAD,CAA1B;AACA,QAAIC,WAAW,GAAGD,WAAW,CAAC,CAAD,CAA7B;AAEAjC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC8B,KAAhC,EAAuCR,QAAvC,EAAiDW,WAAjD;AAEA,QAAIC,aAAa,GAAG,KAAK7F,KAAL,CAAWK,eAA/B;;AACA,QAAI,CAACwF,aAAa,CAACZ,QAAD,CAAlB,EAA8B;AAC5BY,MAAAA,aAAa,CAACZ,QAAD,CAAb,GAA0B;AACxB,SAACW,WAAD,GAAeH;AADS,OAA1B;AAGD,KAJD,MAIO;AACLI,MAAAA,aAAa,CAACZ,QAAD,CAAb,CAAwBW,WAAxB,IAAuCH,KAAvC;AACD;;AAED,SAAKvE,QAAL,CAAc;AACZb,MAAAA,eAAe,EAAEwF;AADL,KAAd;AAGD;;AAEDC,EAAAA,YAAY,CAACC,IAAD,EAAO;AACjB,QAAIC,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIjE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgE,IAAI,CAAC,OAAD,CAAJ,CAAc/D,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,UAAIkE,IAAI,GAAG,uBAAuBF,IAAI,CAAC,OAAD,CAAJ,CAAchE,CAAd,CAAlC;AACAiE,MAAAA,MAAM,CAAC1E,IAAP,CAAY;AAAG,QAAA,SAAS,EAAE2E,IAAd;AAAoB,QAAA,GAAG,EAAElE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ;AACAiE,MAAAA,MAAM,CAAC1E,IAAP,CAAY,GAAZ;AACA0E,MAAAA,MAAM,CAAC1E,IAAP,CAAYyE,IAAI,CAAC,OAAD,CAAJ,CAAchE,CAAd,CAAZ;AACD;;AACD,WAAOiE,MAAP;AACD;;AACDE,EAAAA,MAAM,GAAG;AACPxC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAK3D,KAA1B;AACA,QAAIJ,iBAAiB,GAAG,KAAKU,mBAAL,EAAxB;AACA,QAAI6F,cAAc,GAAG,KAAKzF,kBAAL,EAArB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE0B,MAAM,CAACgE,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,CAAjB;AAAoB,MAAA,KAAK,EAAEhE,MAAM,CAACiE,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DADF,CADF,CADF,EAME,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAEjE,MAAM,CAACkE,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAElE,MAAM,CAACmE,iBADhB;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKxF,mBAAL,EAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAOE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAEqB,MAAM,CAACoE,gBADhB;AAEE,MAAA,OAAO,EAAE,MAAM,KAAK1F,kBAAL,EAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,CANF,EAoBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,EAAE,EAAE,CAAhB;AAAmB,MAAA,KAAK,EAAEsB,MAAM,CAACqE,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG7G,iBADH,CADF,EAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,EAAE,EAAE,CAAhB;AAAmB,MAAA,KAAK,EAAEwC,MAAM,CAACsE,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMP,cAAN,CADF,CADF,CAJF,CApBF,CADF,CADF;AAmCD;;AApkBgC;;AAukBnC,eAAetG,UAAf;AAEA,MAAMuC,MAAM,GAAG;AACbgE,EAAAA,UAAU,EAAE;AACVO,IAAAA,MAAM,EAAE,MADE;AAEV,qBAAiB;AAFP,GADC;AAKbN,EAAAA,SAAS,EAAE;AACTO,IAAAA,OAAO,EAAE,MADA;AAET,mBAAe,QAFN;AAGT,uBAAmB,QAHV;AAIT,mBAAe,MAJN;AAKT,iBAAa;AALJ,GALE;AAYbrE,EAAAA,SAAS,EAAE;AACTsE,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,MAAM,EAAE,KAFC;AAGT,wBAAoB,OAHX;AAITC,IAAAA,KAAK,EAAE,OAJE;AAKTC,IAAAA,MAAM,EAAE;AALC,GAZE;AAmBb3E,EAAAA,gBAAgB,EAAE;AAChBwE,IAAAA,KAAK,EAAE,MADS;AAEhBC,IAAAA,MAAM,EAAE,KAFQ;AAGhB,wBAAoB,SAHJ;AAIhBC,IAAAA,KAAK,EAAE,OAJS;AAKhBC,IAAAA,MAAM,EAAE;AALQ,GAnBL;AA0BbP,EAAAA,YAAY,EAAE;AACZE,IAAAA,MAAM,EAAE;AADI,GA1BD;AA6BbD,EAAAA,YAAY,EAAE;AACZC,IAAAA,MAAM,EAAE;AADI,GA7BD;AAgCb7B,EAAAA,oBAAoB,EAAE;AACpB6B,IAAAA,MAAM,EAAE,MADY;AAEpBM,IAAAA,QAAQ,EAAE,QAFU;AAGpBD,IAAAA,MAAM,EAAE,iBAHY;AAIpBF,IAAAA,MAAM,EAAE;AAJY,GAhCT;AAsCb/B,EAAAA,kBAAkB,EAAE;AAClB6B,IAAAA,OAAO,EAAE,MADS;AAElB,uBAAmB,QAFD;AAGlB,mBAAe,MAHG;AAIlB,uBAAmB;AAJD,GAtCP;AA4CbN,EAAAA,eAAe,EAAE;AACfM,IAAAA,OAAO,EAAE,MADM;AAEf,uBAAmB,UAFJ;AAGf,mBAAe,UAHA;AAIf,qBAAiB;AAJF,GA5CJ;AAkDbL,EAAAA,iBAAiB,EAAE;AACjBM,IAAAA,KAAK,EAAE,MADU;AAEjB,oBAAgB,KAFC;AAGjBE,IAAAA,KAAK,EAAE,OAHU;AAIjBC,IAAAA,MAAM,EAAE,iBAJS;AAKjB,mBAAe,MALE;AAMjB,wBAAoB;AANH,GAlDN;AA0DbR,EAAAA,gBAAgB,EAAE;AAChBK,IAAAA,KAAK,EAAE,MADS;AAEhB,oBAAgB,KAFA;AAGhBE,IAAAA,KAAK,EAAE,OAHS;AAIhBC,IAAAA,MAAM,EAAE,iBAJQ;AAKhB,mBAAe,MALC;AAMhB,wBAAoB;AANJ;AA1DL,CAAf","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n\n/*Feb. 4, 2020: fixed some warnings relating to varaible declaration*/\n\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\n\n//import { Card } from \"components/Card/Card.jsx\";\nimport CustomButton from \"components/CustomButton/CustomButton\";\n//import { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\n\nimport { apiBaseURL } from \"./Dashboard.jsx\";\n\n/*values assigned to const cannot be changed*/\nconst filter_categories = [\n  \"Eye Diagnosis\",\n  \"Systemic Diagnosis\",\n  \"Age\",\n  \"Ethnicity\",\n  \"Image Procedure Type\",\n  \"Labs\",\n  \"Medication Generic Name\",\n  \"Medication Therapuetic Name\",\n  \"Vision\",\n  \"Pressure\"\n];\n\n/*variable definitions\nfilter_categories: An array of custombuttons containing e.g. eye diagnosis, age, ethnicity, etc. \nfilter_subcategories: The items in each category constitute filter_subcategories (e.g ketorolac, etc. ), with the indexing \nfilter_subcategories_div: A list of the actual items with each subcategory box, including the checkboxes and styling itself, with the key of the array being e.g. Age\nselected_categories: A list of numbers that represent which categories were selected\nselected_values:\ncheckbox_values: \n*/\nclass FilterPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter_categories: [],\n      filter_subcategories: {},\n      filter_subcategories_div: {},\n      selected_categories: [],\n      selected_values: {},\n      checkbox_values: {}\n    };\n    this.getFilterCategories = this.getFilterCategories.bind(this);\n    this.getFilterSubCategories = this.getFilterSubCategories.bind(this);\n    this.createFilterSubcategoryDivs = this.createFilterSubcategoryDivs.bind(\n      this\n    );\n    this.getSelectedFilters = this.getSelectedFilters.bind(this);\n    this.categoryFilterPressed = this.categoryFilterPressed.bind(this);\n    this.subcategoryFilterPressed = this.subcategoryFilterPressed.bind(this);\n    this.checkBoxChanged = this.checkBoxChanged.bind(this);\n    this.resetButtonPressed = this.resetButtonPressed.bind(this);\n    this.submitButtonPressed = this.submitButtonPressed.bind(this);\n    this.isSubcategoryChecked = this.isSubcategoryChecked.bind(this);\n  }\n\n  componentDidMount() {\n    let filter_categories = this.getFilterCategories();\n    this.setState({\n      filter_categories: filter_categories\n    });\n    this.getFilterSubCategories();\n    if (this.props.pageStatus.FilterPage) {\n      var tempSelectedCategories = [];\n      for (var key in this.props.pageStatus.FilterPage) {\n        tempSelectedCategories.push(key);\n      }\n      this.setState({\n        selected_categories: tempSelectedCategories,\n        selected_values: this.props.pageStatus.FilterPage\n      });\n    }\n    setTimeout(() => {\n      this.createFilterSubcategoryDivs();\n    }, 1000);\n  }\n\n  //resets all of the filters and subfilters selected\n  resetButtonPressed() {\n    this.setState({\n      selected_categories: [],\n      selected_values: {},\n      checkbox_values: {}\n    });\n  }\n\n  //submits all of the filters to the patients page\n  submitButtonPressed() {\n    let temp_selected_values = this.state.selected_values;\n    for (var key in this.state.checkbox_values) {\n      temp_selected_values[key] = this.state.checkbox_values[key];\n    }\n    var tempPageStatus = this.props.pageStatus;\n    tempPageStatus[\"FilterPage\"] = temp_selected_values;\n    tempPageStatus[\"PatientsPage\"] = temp_selected_values;\n    let newState = {\n      page: \"PatientsPage\" /*when button is pressed, goes to the PatientsPage*/,\n      additionalInfo: temp_selected_values,\n      pageStatus: tempPageStatus\n    };\n    this.props.changePage(newState);\n  }\n\n  //function populates the side div of all avaliable categories according to filter_categories\n  getFilterCategories() {\n    var temp_filter_categories = [];\n    for (var i = 0; i < filter_categories.length; i++) {\n      var category_name = filter_categories[i];\n      var temp_filter_category = null;\n      if (this.state.selected_categories.indexOf(category_name) !== -1) {\n        temp_filter_category /*selected_categories provide a list of index numbers that show which categories were selected. If selected, styles have blue background.*/ = (\n          <CustomButton\n            style={styles.buttonDivPressed}\n            title={category_name}\n            onClick={e => this.categoryFilterPressed(e)}\n          >\n            {\" \"}\n            {category_name}{\" \"}\n          </CustomButton>\n        );\n      } else {\n        temp_filter_category = (\n          <CustomButton\n            style={styles.buttonDiv}\n            title={category_name}\n            onClick={e => this.categoryFilterPressed(e)}\n          >\n            {\" \"}\n            {category_name}{\" \"}\n          </CustomButton>\n        );\n      }\n      temp_filter_categories.push(temp_filter_category);\n    }\n    return temp_filter_categories;\n  }\n\n  //function populates the subcategories of all filter categories by making the appropriate calls to the API\n  getFilterSubCategories() {\n    let currentComponent = this;\n    const axios = require(\"axios\");\n\n    //get eye diagnosis subcategories from database\n    var link = apiBaseURL + \"/ssd_api/get_distinct?special=eye_diagnosis\";\n    var autToken = \"Basic \" + btoa(this.props.accessToken + \":something\")\n\n    const options = {\n      url: link,\n      method: 'get',\n      headers: {\n        'Authorization': autToken\n      },\n    };\n\n    axios(options)\n      .then(function (response) {\n        var temp_filter_subcategories =\n          currentComponent.state.filter_subcategories;\n        temp_filter_subcategories[\"Eye Diagnosis\"] =\n          response.data.result.data; /*stores into an array with key \"Eye Diagnosis\"*/\n        currentComponent.setState({\n          filter_subcategories: temp_filter_subcategories /*updates the state of filter_subcategories each time*/\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    //get systemic diagnosis subcategories from database\n    var link2 = apiBaseURL + \"/ssd_api/get_distinct?special=systemic_diagnosis\";\n\n    const options2 = {\n      url: link2,\n      method: 'get',\n      headers: {\n        'Authorization': autToken\n      },\n    };\n    axios(options2)\n      .then(function (response) {\n        var temp_filter_subcategories =\n          currentComponent.state.filter_subcategories;\n        temp_filter_subcategories[\"Systemic Diagnosis\"] =\n          response.data.result.data;\n        currentComponent.setState({\n          filter_subcategories: temp_filter_subcategories\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    //put age subcategories\n    var temp_filter_subcategories = currentComponent.state.filter_subcategories;\n    temp_filter_subcategories[\"Age\"] = [\"less\", \"greater\", \"equal\", \"between\"];\n    currentComponent.setState({\n      filter_subcategories: temp_filter_subcategories\n    });\n\n    //put ethnicity subcategories\n    temp_filter_subcategories = currentComponent.state.filter_subcategories;\n    temp_filter_subcategories[\"Ethnicity\"] = [\n      \"Hispanic or Latino\",\n      \"Not Hispanic or Latino\",\n      \"Declined\"\n    ];\n    currentComponent.setState({\n      filter_subcategories: temp_filter_subcategories\n    });\n\n    //get image procedure type from database\n    var link3 =\n      apiBaseURL +\n      \"/ssd_api/get_distinct?table_name=image_procedure&col_name=image_procedure\";\n\n    const options3 = {\n      url: link3,\n      method: 'get',\n      headers: {\n        'Authorization': autToken\n      },\n    };\n    axios(options3)\n      .then(function (response) {\n        var temp_filter_subcategories =\n          currentComponent.state.filter_subcategories;\n        temp_filter_subcategories[\"Image Procedure Type\"] =\n          response.data.result.data;\n        currentComponent.setState({\n          filter_subcategories: temp_filter_subcategories\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    //get lab values from database\n    var link4 =\n      apiBaseURL +\n      \"/ssd_api/get_distinct?table_name=lab_value_deid&col_name=name\";\n\n    const options4 = {\n      url: link4,\n      method: 'get',\n      headers: {\n        'Authorization': autToken\n      },\n    };\n\n    axios(options4)\n      .then(function (response) {\n        var temp_filter_subcategories =\n          currentComponent.state.filter_subcategories;\n        temp_filter_subcategories[\"Labs\"] = response.data.result.data;\n        currentComponent.setState({\n          filter_subcategories: temp_filter_subcategories\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    //get medication generic name from database\n    var link5 =\n      apiBaseURL +\n      \"/ssd_api/get_distinct?table_name=medication_deid&col_name=generic_name\";\n\n    const options5 = {\n      url: link5,\n      method: 'get',\n      headers: {\n        'Authorization': autToken\n      },\n    };\n\n    axios(options5)\n      .then(function (response) {\n        var temp_filter_subcategories =\n          currentComponent.state.filter_subcategories;\n        temp_filter_subcategories[\"Medication Generic Name\"] =\n          response.data.result.data;\n        currentComponent.setState({\n          filter_subcategories: temp_filter_subcategories\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    //get medication therapuetic name from database\n    var link6 =\n      apiBaseURL +\n      \"/ssd_api/get_distinct?table_name=medication_deid&col_name=therapeutic_class\";\n\n    const options6 = {\n      url: link6,\n      method: 'get',\n      headers: {\n        'Authorization': autToken\n      },\n    };\n    axios(options6)\n      .then(function (response) {\n        var temp_filter_subcategories =\n          currentComponent.state.filter_subcategories;\n        temp_filter_subcategories[\"Medication Therapuetic Name\"] =\n          response.data.result.data;\n        currentComponent.setState({\n          filter_subcategories: temp_filter_subcategories\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    //put vision subcategories\n    temp_filter_subcategories = currentComponent.state.filter_subcategories;\n    temp_filter_subcategories[\"Left Vision\"] = [\n      \"less\",\n      \"greater\",\n      \"equal\",\n      \"between\"\n    ];\n    temp_filter_subcategories[\"Right Vision\"] = [\n      \"less\",\n      \"greater\",\n      \"equal\",\n      \"between\"\n    ];\n    currentComponent.setState({\n      filter_subcategories: temp_filter_subcategories\n    });\n\n    //put pressure subcategories\n    temp_filter_subcategories = currentComponent.state.filter_subcategories;\n    temp_filter_subcategories[\"Left Pressure\"] = [\n      \"less\",\n      \"greater\",\n      \"equal\",\n      \"between\"\n    ];\n    temp_filter_subcategories[\"Right Pressure\"] = [\n      \"less\",\n      \"greater\",\n      \"equal\",\n      \"between\"\n    ];\n    currentComponent.setState({\n      filter_subcategories: temp_filter_subcategories\n    });\n  }\n\n  isSubcategoryChecked(key, name) {\n    try {\n      if (this.state.selected_values[key].indexOf(name) !== -1) {\n        return true\n      }\n    }\n    catch (e) { }\n    try {\n      if (this.state.selected_values[key][name]) {\n        return true\n      }\n    }\n    catch (e) { }\n    return false;\n  }\n\n  createFilterSubcategoryDivs() {\n    var input_categories = [\n      \"Age\",\n      \"Left Vision\",\n      \"Right Vision\",\n      \"Left Pressure\",\n      \"Right Pressure\"\n    ];\n    let temp_filter_subcategories_div = {};\n    //goes through every category (e.g Eye Diagnosis) and every subcategory (e.g retenal edema) and creates a subcategory box\n    for (var key in this.state.filter_subcategories) {\n      var temp_subcategories = [];\n      var temp_element;\n      for (var index in this.state.filter_subcategories[key]) {\n        var name = this.state.filter_subcategories[key][index];\n        // if the category is something like eye diagnosis or labs without less, greater, or between, then run this\n        if (input_categories.indexOf(key) === -1) {\n          temp_element = (\n            <div>\n              <input\n                type=\"checkbox\"\n                defaultChecked={this.isSubcategoryChecked(key, name)}\n                title={key + \";\" + name}\n                onChange={e => this.subcategoryFilterPressed(e)}\n              />\n              {name}\n            </div>\n          ); // if the category is something like age, vision, pressure, and the item is not \"between\", then run the elseif part\n        } else if (name !== \"between\") {\n          temp_element = (\n            <div>\n              <input\n                type=\"checkbox\"\n                defaultChecked={this.isSubcategoryChecked(key, name)}\n                title={key + \";\" + name}\n                onChange={e => this.subcategoryFilterPressed(e)}\n                style={styles.main_div_button_checkbox}\n              />\n              {name}\n              <input\n                type=\"text\"\n                defaultChecked={this.isSubcategoryChecked(key, name)}\n                title={key + \";\" + name}\n                onChange={e => this.checkBoxChanged(e)}\n                style={styles.main_div_button_text}\n              />\n            </div>\n          ); // If there is \"between\", then need a checkbox and two textboxes (in contrast to one textbox)\n        } else {\n          temp_element = (\n            <div>\n              <input\n                type=\"checkbox\"\n                defaultChecked={this.isSubcategoryChecked(key, name)}\n                title={key + \";\" + name}\n                onChange={e => this.subcategoryFilterPressed(e)}\n                style={styles.main_div_button_checkbox}\n              />\n              {name}\n              <input\n                type=\"text\"\n                title={key + \";\" + name + \" less\"}\n                onChange={e => this.checkBoxChanged(e)}\n                style={styles.main_div_button_text}\n              />\n              and\n              <input\n                type=\"text\"\n                title={key + \";\" + name + \" greater\"}\n                onChange={e => this.checkBoxChanged(e)}\n                style={styles.main_div_button_text}\n              />\n            </div>\n          );\n        }\n        temp_subcategories.push(temp_element);\n      }\n      temp_filter_subcategories_div[key] = (\n        <Col lg={3} sm={4} style={styles.mainDivCategoryStyle}>\n          <div style={styles.mainDivButtonTitle}>{key}</div>{\" \"}\n          {/*This is the title in each subcategory box (bold, underlined)*/}\n          {temp_subcategories}{\" \"}\n          {/*This is the actual list of checkbox items (e.g. Prenatal multi..., hydroxychloroquine, etc.) that are being populated in each subcategory box*/}\n        </Col>\n      );\n    }\n    this.setState({\n      filter_subcategories_div: temp_filter_subcategories_div\n    });\n  }\n  //returns an array of selected categories. In the case that it is either vision or pressure, add both left and right to each push.\n  getSelectedFilters() {\n    var chosen_categories = [];\n    for (var i = 0; i < this.state.selected_categories.length; i++) {\n      var name = this.state.selected_categories[i];\n      if (name === \"Vision\") {\n        chosen_categories.push(\n          this.state.filter_subcategories_div[\"Left Vision\"]\n        );\n        chosen_categories.push(\n          this.state.filter_subcategories_div[\"Right Vision\"]\n        );\n      } else if (name === \"Pressure\") {\n        chosen_categories.push(\n          this.state.filter_subcategories_div[\"Left Pressure\"]\n        );\n        chosen_categories.push(\n          this.state.filter_subcategories_div[\"Right Pressure\"]\n        );\n      } else {\n        chosen_categories.push(this.state.filter_subcategories_div[name]);\n      }\n    }\n    return chosen_categories;\n  }\n\n  //updates state.selected_categories according to categories selected\n  categoryFilterPressed(e) {\n    let category = e.target.title;\n    if (this.state.selected_categories.indexOf(category) === -1) {\n      this.state.selected_categories.push(category);\n      this.setState({\n        selected_categories: this.state.selected_categories\n      });\n    } else {\n      var new_list = this.state.selected_categories.filter(function (name) {\n        return name !== category;\n      });\n      this.setState({\n        selected_categories: new_list\n      });\n    }\n  }\n\n  //updates state.selected_values according to subcategories selected: subcategory filters showing up on website, etc\n  subcategoryFilterPressed(e) {\n    let event = e.target.title;\n    let values = event.split(\";\");\n    let category = values[0];\n    let value = values[1];\n    if (!this.state.selected_values[category]) {\n      /*edited due to warning*/\n      var temp_selected_values = this.state.selected_values;\n      temp_selected_values[category] = [value];\n      this.setState({\n        selected_values: temp_selected_values\n      });\n      /*\n      this.state.selected_values[category] = [value];\n      this.setState({\n        selected_values: this.state.selected_values\n      });*/\n    } else if (this.state.selected_values[category].indexOf(value) === -1) {\n      this.state.selected_values[category].push(value);\n      this.setState({\n        selected_values: this.state.selected_values\n      });\n    } else {\n      var temp_list = this.state.selected_values[category].filter(function (\n        name\n      ) {\n        return name !== value;\n      });\n      var new_list = this.state.selected_values;\n      new_list[category] = temp_list;\n      this.setState({\n        selected_values: new_list\n      });\n    }\n  }\n\n  //updates checkbox_values according to checkbox changed: individual checkboxes in each subcategory\n  checkBoxChanged(e) {\n    let value = e.target.value;\n    let cat_and_sub = e.target.title.split(\";\");\n    let category = cat_and_sub[0];\n    let subcategory = cat_and_sub[1];\n\n    console.log(\"CHECKBOX CHANGED\", value, category, subcategory)\n\n    let temp_checkbox = this.state.checkbox_values;\n    if (!temp_checkbox[category]) {\n      temp_checkbox[category] = {\n        [subcategory]: value\n      };\n    } else {\n      temp_checkbox[category][subcategory] = value;\n    }\n\n    this.setState({\n      checkbox_values: temp_checkbox\n    });\n  }\n\n  createLegend(json) {\n    var legend = [];\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(<i className={type} key={i} />);\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n    return legend;\n  }\n  render() {\n    console.log(\"state\", this.state);\n    let filter_categories = this.getFilterCategories();\n    var chosen_filters = this.getSelectedFilters();\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row style={styles.titleStyle}>\n            <Col lg={12} sm={8} style={styles.titleText}>\n              <div>Please Select Your Filters to Create a Patient Cohort</div>\n            </Col>\n          </Row>\n          <Row style={styles.underTitleStyle}>\n            <CustomButton\n              style={styles.buttonUpperSubmit}\n              onClick={() => this.submitButtonPressed()}\n            >\n              SUBMIT\n            </CustomButton>\n            <CustomButton\n              style={styles.buttonUpperReset}\n              onClick={() => this.resetButtonPressed()}\n            >\n              RESET\n            </CustomButton>\n          </Row>\n          <Row>\n            <Col lg={3} sm={3} style={styles.sideDivStyle}>\n              {filter_categories}\n            </Col>\n            <Col lg={9} sm={6} style={styles.mainDivStyle}>\n              <Grid fluid>\n                <Row>{chosen_filters}</Row>\n              </Grid>\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default FilterPage;\n\nconst styles = {\n  titleStyle: {\n    height: \"10vh\",\n    \"margin-bottom\": \"2vh\"\n  },\n  titleText: {\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"center\",\n    \"font-weight\": \"bold\",\n    \"font-size\": \"30px\"\n  },\n  buttonDiv: {\n    width: \"100%\",\n    margin: \"1vh\",\n    \"background-color\": \"white\",\n    color: \"black\",\n    border: \"solid 2px black\"\n  },\n  buttonDivPressed: {\n    width: \"100%\",\n    margin: \"1vh\",\n    \"background-color\": \"#78deec\",\n    color: \"black\",\n    border: \"solid 2px black\"\n  },\n  sideDivStyle: {\n    height: \"80vh\"\n  },\n  mainDivStyle: {\n    height: \"90vh\"\n  },\n  mainDivCategoryStyle: {\n    height: \"20vh\",\n    overflow: \"scroll\",\n    border: \"solid 2px black\",\n    margin: \"1vh\"\n  },\n  mainDivButtonTitle: {\n    display: \"flex\",\n    \"justify-content\": \"center\",\n    \"font-weight\": \"bold\",\n    \"text-decoration\": \"underline\"\n  },\n  underTitleStyle: {\n    display: \"flex\",\n    \"justify-content\": \"flex-end\",\n    \"align-items\": \"flex-end\",\n    \"padding-right\": \"16%\"\n  },\n  buttonUpperSubmit: {\n    width: \"12em\",\n    \"margin-right\": \"1vh\",\n    color: \"black\",\n    border: \"solid 2px black\",\n    \"font-weight\": \"bold\",\n    \"background-color\": \"#a3ec9a\"\n  },\n  buttonUpperReset: {\n    width: \"12em\",\n    \"margin-right\": \"1vh\",\n    color: \"black\",\n    border: \"solid 2px black\",\n    \"font-weight\": \"bold\",\n    \"background-color\": \"#ec585a\"\n  }\n};\n"]},"metadata":{},"sourceType":"module"}