{"ast":null,"code":"var _jsxFileName = \"/Users/keremguventurk/Desktop/northwestern/winter2020/bme390-2/Self-Service-Database-UI/src/views/Dashboard.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n\n/*This is page selector that selects which page is shown*/\nimport React, { Component } from \"react\";\nimport FilterPage from \"./FilterPage.jsx\";\nimport PatientsPage from \"./PatientsPage.jsx\";\nimport ExamsPage from \"./ExamsPage.jsx\";\nimport PatientHistoryPage from \"./PatientHistoryPage.jsx\";\nimport PatientImagesPage from \"./PatientImagesPage.jsx\";\nimport ShowPatientImagePage from \"./ShowPatientImagePage.jsx\";\nexport const apiBaseURL = \"https://tigernie.com\";\n/*props means properties*/\n\n/*state used for updating components- e.g. this.state.page on line 41*/\n\n/* bind is helpful for retaining hte object instance, so it'll remember what \"this\" is*/\n\nvar pageStatus = {};\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: \"FilterPage\",\n      additionalInfo: null,\n      pageStatus: {},\n      accessToken: this.props.accessToken,\n      backToLoginPage: this.props.backToLoginPage\n    };\n    this.pageSelector = this.pageSelector.bind(this);\n    this.changePage = this.changePage.bind(this);\n  }\n\n  componentDidMount() {\n    var tempPage = null;\n    var path = this.props.location.pathname;\n\n    if (path === \"/admin/filters\") {\n      tempPage = \"FilterPage\";\n    }\n\n    this.setState({\n      page: tempPage,\n      pageStatus: pageStatus\n    });\n  }\n  /* arrow functions (param1, param2, paramN) => expression*/\n\n  /*changePage function sets the state to newState(see bottom of page)*/\n\n  /*In ReactJS, a starting and closing tag are not necessarily required (e.g. <div></div>), different from HTML. */\n\n\n  pageSelector() {\n    let page = this.state.page;\n\n    if (page === \"FilterPage\") {\n      return React.createElement(FilterPage, {\n        changePage: newState => this.changePage(newState),\n        additionalInfo: this.state.additionalInfo,\n        pageStatus: this.state.pageStatus,\n        accessToken: this.state.accessToken,\n        backToLoginPage: this.state.backToLoginPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      });\n    } else if (page === \"PatientsPage\") {\n      return React.createElement(PatientsPage, {\n        changePage: newState => this.changePage(newState),\n        additionalInfo: this.state.additionalInfo,\n        pageStatus: this.state.pageStatus,\n        accessToken: this.state.accessToken,\n        backToLoginPage: this.state.backToLoginPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n    } else if (page === \"ExamsPage\") {\n      return React.createElement(ExamsPage, {\n        changePage: newState => this.changePage(newState),\n        additionalInfo: this.state.additionalInfo,\n        pageStatus: this.state.pageStatus,\n        accessToken: this.state.accessToken,\n        backToLoginPage: this.state.backToLoginPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      });\n    } else if (page === \"PatientHistoryPage\") {\n      return React.createElement(PatientHistoryPage, {\n        changePage: newState => this.changePage(newState),\n        additionalInfo: this.state.additionalInfo,\n        pageStatus: this.state.pageStatus,\n        accessToken: this.state.accessToken,\n        backToLoginPage: this.state.backToLoginPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    } else if (page === \"PatientImagesPage\") {\n      return React.createElement(PatientImagesPage, {\n        changePage: newState => this.changePage(newState),\n        additionalInfo: this.state.additionalInfo,\n        pageStatus: this.state.pageStatus,\n        accessToken: this.state.accessToken,\n        backToLoginPage: this.state.backToLoginPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      });\n    } else if (page === \"ShowPatientImagePage\") {\n      return React.createElement(ShowPatientImagePage, {\n        changePage: newState => this.changePage(newState),\n        additionalInfo: this.state.additionalInfo,\n        pageStatus: this.state.pageStatus,\n        accessToken: this.state.accessToken,\n        backToLoginPage: this.state.backToLoginPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      });\n    }\n\n    return null;\n  }\n\n  changePage(newState) {\n    pageStatus = newState.pageStatus;\n    this.setState(newState);\n  }\n\n  render() {\n    let currentPage = this.pageSelector();\n    return currentPage;\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/keremguventurk/Desktop/northwestern/winter2020/bme390-2/Self-Service-Database-UI/src/views/Dashboard.jsx"],"names":["React","Component","FilterPage","PatientsPage","ExamsPage","PatientHistoryPage","PatientImagesPage","ShowPatientImagePage","apiBaseURL","pageStatus","Dashboard","constructor","props","state","page","additionalInfo","accessToken","backToLoginPage","pageSelector","bind","changePage","componentDidMount","tempPage","path","location","pathname","setState","newState","render","currentPage"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*This is page selector that selects which page is shown*/\nimport React, { Component } from \"react\";\nimport FilterPage from \"./FilterPage.jsx\";\nimport PatientsPage from \"./PatientsPage.jsx\";\nimport ExamsPage from \"./ExamsPage.jsx\";\nimport PatientHistoryPage from \"./PatientHistoryPage.jsx\";\nimport PatientImagesPage from \"./PatientImagesPage.jsx\";\nimport ShowPatientImagePage from \"./ShowPatientImagePage.jsx\";\n\nexport const apiBaseURL = \"https://tigernie.com\";\n\n/*props means properties*/\n/*state used for updating components- e.g. this.state.page on line 41*/\n/* bind is helpful for retaining hte object instance, so it'll remember what \"this\" is*/\n\nvar pageStatus = {}\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: \"FilterPage\",\n      additionalInfo: null,\n      pageStatus: {},\n      accessToken: this.props.accessToken,\n      backToLoginPage: this.props.backToLoginPage\n    };\n    this.pageSelector = this.pageSelector.bind(this);\n    this.changePage = this.changePage.bind(this);\n  }\n\n  componentDidMount() {\n    var tempPage = null;\n    var path = this.props.location.pathname\n    if (path === \"/admin/filters\") {\n      tempPage = \"FilterPage\"\n    }\n    this.setState({\n      page: tempPage,\n      pageStatus: pageStatus\n    })\n  }\n\n  /* arrow functions (param1, param2, paramN) => expression*/\n  /*changePage function sets the state to newState(see bottom of page)*/\n  /*In ReactJS, a starting and closing tag are not necessarily required (e.g. <div></div>), different from HTML. */\n  pageSelector() {\n    let page = this.state.page;\n    if (page === \"FilterPage\") {\n      return (\n        <FilterPage\n          changePage={newState => this.changePage(newState)}\n          additionalInfo={this.state.additionalInfo}\n          pageStatus={this.state.pageStatus}\n          accessToken = {this.state.accessToken}\n          backToLoginPage = {this.state.backToLoginPage}\n        />\n      );\n    } else if (page === \"PatientsPage\") {\n      return (\n        <PatientsPage\n          changePage={newState => this.changePage(newState)}\n          additionalInfo={this.state.additionalInfo}\n          pageStatus={this.state.pageStatus}\n          accessToken = {this.state.accessToken}\n          backToLoginPage = {this.state.backToLoginPage}\n        />\n      );\n    } else if (page === \"ExamsPage\") {\n      return (\n        <ExamsPage\n          changePage={newState => this.changePage(newState)}\n          additionalInfo={this.state.additionalInfo}\n          pageStatus={this.state.pageStatus}\n          accessToken = {this.state.accessToken}\n          backToLoginPage = {this.state.backToLoginPage}\n        />\n      );\n    } else if (page === \"PatientHistoryPage\") {\n      return (\n        <PatientHistoryPage\n          changePage={newState => this.changePage(newState)}\n          additionalInfo={this.state.additionalInfo}\n          pageStatus={this.state.pageStatus}\n          accessToken = {this.state.accessToken}\n          backToLoginPage = {this.state.backToLoginPage}\n        />\n      );\n    } else if (page === \"PatientImagesPage\") {\n      return (\n        <PatientImagesPage\n          changePage={newState => this.changePage(newState)}\n          additionalInfo={this.state.additionalInfo}\n          pageStatus={this.state.pageStatus}\n          accessToken = {this.state.accessToken}\n          backToLoginPage = {this.state.backToLoginPage}\n        />\n      );\n    } else if (page === \"ShowPatientImagePage\") {\n      return (\n        <ShowPatientImagePage\n          changePage={newState => this.changePage(newState)}\n          additionalInfo={this.state.additionalInfo}\n          pageStatus={this.state.pageStatus}\n          accessToken = {this.state.accessToken}\n          backToLoginPage = {this.state.backToLoginPage}\n        />\n      );\n    }\n    return null\n  }\n\n  changePage(newState) {\n    pageStatus = newState.pageStatus\n    this.setState(newState);\n  }\n\n  render() {\n    let currentPage = this.pageSelector();\n    return currentPage;\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}