{"ast":null,"code":"var _jsxFileName = \"/Users/keremguventurk/Desktop/northwestern/winter2020/bme390-2/Self-Service-Database-UI/src/layouts/Admin.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotificationSystem from \"react-notification-system\";\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\nimport Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport { style } from \"variables/Variables.jsx\";\nimport routes from \"routes.js\";\nimport image from \"assets/img/sidebar-2.jpg\";\n/*sidebar-2 is the default hot air balloon image*/\n\nimport loginBackgroundImage from \"assets/img/nmh.jpg\";\nexport const apiBaseURL = \"https://tigernie.com\";\n\nclass Admin extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.handleNotificationClick = position => {\n      var color = Math.floor(Math.random() * 4 + 1);\n      var level;\n\n      switch (color) {\n        case 1:\n          level = \"success\";\n          break;\n\n        case 2:\n          level = \"warning\";\n          break;\n\n        case 3:\n          level = \"error\";\n          break;\n\n        case 4:\n          level = \"info\";\n          break;\n\n        default:\n          break;\n      }\n      /*Eliminated the notificatino that pops up in the original template*/\n\n      /*\n      this.state._notificationSystem.addNotification({\n        title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n        message: (\n          <div>\n            Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n            every web developer.\n          </div>\n        ),\n        level: level,\n        position: position,\n        autoDismiss: 15\n      });\n      */\n\n    };\n\n    this.getRoutes = routes => {\n      return routes.map((prop, key) => {\n        if (prop.layout === \"/admin\") {\n          return React.createElement(Route, {\n            path: prop.layout + prop.path,\n            render: props => React.createElement(prop.component, Object.assign({}, props, {\n              handleClick: this.handleNotificationClick,\n              accessToken: this.state.accessToken,\n              backToLoginPage: this.backToLoginPage,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 98\n              },\n              __self: this\n            })),\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          });\n        } else {\n          return null;\n        }\n      });\n    };\n\n    this.getBrandText = path => {\n      for (let i = 0; i < routes.length; i++) {\n        if (this.props.location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n          return routes[i].name;\n        }\n      }\n\n      return \"Brand\";\n    };\n\n    this.handleImageClick = image => {\n      this.setState({\n        image: image\n      });\n    };\n\n    this.handleColorClick = color => {\n      this.setState({\n        color: color\n      });\n    };\n\n    this.handleHasImage = hasImage => {\n      this.setState({\n        hasImage: hasImage\n      });\n    };\n\n    this.handleFixedClick = () => {\n      if (this.state.fixedClasses === \"dropdown\") {\n        this.setState({\n          fixedClasses: \"dropdown show-dropdown open\"\n        });\n      } else {\n        this.setState({\n          fixedClasses: \"dropdown\"\n        });\n      }\n    };\n\n    this.state = {\n      _notificationSystem: null,\n      image: image,\n      color: \"black\"\n      /*black is the default color for the sidebar*/\n      ,\n      hasImage: true,\n      fixedClasses: \"dropdown show-dropdown open\",\n      accessGranted: false,\n      displayedText: \"\",\n      loginInfo: {\n        username: null,\n        password: null\n      }\n    };\n    this.pageDisplayed = this.pageDisplayed.bind(this);\n    this.textFieldChanged = this.textFieldChanged.bind(this);\n    this.loginButtonPressed = this.loginButtonPressed.bind(this);\n    this.backToLoginPage = this.backToLoginPage.bind(this);\n    this.createDemoFiles = this.createDemoFiles.bind(this);\n    console.log(\"HELLO\");\n  }\n\n  componentDidMount() {\n    this.setState({\n      _notificationSystem: this.refs.notificationSystem\n    });\n    var _notificationSystem = this.refs.notificationSystem;\n    var color = Math.floor(Math.random() * 4 + 1);\n    /*\n    var level;\n    switch (color) {\n      case 1:\n        level = \"success\";\n        break;\n      case 2:\n        level = \"warning\";\n        break;\n      case 3:\n        level = \"error\";\n        break;\n      case 4:\n        level = \"info\";\n        break;\n      default:\n        break;\n    }\n     */\n\n    /*\n    _notificationSystem.addNotification({\n    title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n    message: (\n      <div>\n        Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n        every web developer.\n      </div>\n    ),\n    level: level,\n    position: \"tr\",\n    autoDismiss: 15\n    });\n    */\n  }\n\n  componentDidUpdate(e) {\n    if (window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf(\"nav-open\") !== -1) {\n      document.documentElement.classList.toggle(\"nav-open\");\n    }\n\n    if (e.history.action === \"PUSH\") {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n\n  backToLoginPage() {\n    this.setState({\n      accessGranted: false\n    });\n  } //update state loginInfo values according to the values in Text Fields\n\n\n  textFieldChanged(e) {\n    var fieldName = e.target.title;\n    var value = e.target.value;\n    var tempLoginInfo = this.state.loginInfo;\n    tempLoginInfo[[fieldName]] = value;\n    this.setState({\n      loginInfo: tempLoginInfo\n    });\n  } //logins the user if the username and password is correct\n\n\n  loginButtonPressed() {\n    var username = this.state.loginInfo.username;\n    var password = this.state.loginInfo.password;\n    let currentComponent = this;\n\n    const axios = require(\"axios\");\n\n    var link = apiBaseURL + \"/ssd_api/token\";\n    const options = {\n      url: link,\n      method: 'get',\n      headers: {\n        'Authorization': \"Basic \" + btoa(username + \":\" + password)\n      }\n    };\n    axios(options).then(response => {\n      console.log(response);\n      currentComponent.setState({\n        accessGranted: true,\n        accessToken: response.data.result.token\n      });\n    }).catch(function (error) {\n      currentComponent.setState({\n        displayedText: \"Incorrect username or password. Please try again.\"\n      });\n    });\n  }\n\n  pageDisplayed() {\n    if (this.state.accessGranted) {\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(NotificationSystem, {\n        ref: \"notificationSystem\",\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(Sidebar, Object.assign({}, this.props, {\n        routes: routes,\n        image: this.state.image,\n        color: this.state.color,\n        hasImage: this.state.hasImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"main-panel\",\n        className: \"main-panel\",\n        ref: \"mainPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(AdminNavbar, Object.assign({}, this.props, {\n        style: styles.NavStyle,\n        brandText: this.getBrandText(this.props.location.pathname),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      })), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, this.getRoutes(routes)), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), \"*/}\"));\n    } else {\n      return React.createElement(\"div\", {\n        style: styles.mainDivStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: styles.cardStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: styles.innerTitleStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Welcome to the NMH Ophthalmology Research Site!\"), React.createElement(\"div\", {\n        style: styles.innerTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Username:\"), React.createElement(\"input\", {\n        type: \"text\",\n        title: \"username\",\n        style: styles.textFieldStyle,\n        onChange: e => this.textFieldChanged(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: styles.innerTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"Password:\"), React.createElement(\"input\", {\n        type: \"password\",\n        title: \"password\",\n        style: styles.textFieldStyle,\n        onChange: e => this.textFieldChanged(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: styles.innerTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(CustomButton, {\n        style: styles.loginButtonStyle,\n        title: \"loginButton\",\n        onClick: () => this.loginButtonPressed(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"Login\")), React.createElement(\"div\", {\n        style: styles.errorMessageStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, this.state.displayedText)));\n    }\n  }\n\n  render() {\n    var page = this.pageDisplayed();\n    return page;\n  }\n\n}\n\nexport default Admin;\nconst styles = {\n  NavStyle: {\n    \"font-weight\": \"bold\",\n    color: \"black\"\n  },\n  mainDivStyle: {\n    position: \"absolute\",\n    height: \"100%\",\n    width: \"100%\",\n    backgroundImage: `url(${loginBackgroundImage})`,\n    backgroundSize: \"cover\",\n    display: \"flex\",\n    \"flex-direction\": \"row\",\n    \"justify-content\": \"center\",\n    \"align-items\": \"center\"\n  },\n  cardStyle: {\n    width: \"45%\",\n    height: \"70%\",\n    borderRadius: \"7%\",\n    border: \"solid 2px black\",\n    backgroundColor: \"white\",\n    display: \"flex\",\n    \"flex-direction\": \"column\",\n    margin: \"2%\"\n  },\n  textFieldStyle: {\n    width: \"90%\",\n    border: \"solid 2px black\",\n    backgroundColor: \"white\"\n  },\n  loginButtonStyle: {\n    width: \"90%\",\n    color: \"black\",\n    border: \"solid 2px black\",\n    \"font-weight\": \"bold\",\n    \"font-size\": \"20px\",\n    \"background-color\": \"#eef27c\"\n  },\n  innerTitleStyle: {\n    width: \"90%\",\n    borderRadius: \"7%\",\n    backgroundColor: \"white\",\n    display: \"flex\",\n    \"justify-content\": \"center\",\n    \"font-weight\": \"bold\",\n    \"font-size\": \"30px\",\n    margin: \"5%\"\n  },\n  innerTextField: {\n    display: \"flex\",\n    \"flex-direction\": \"column\",\n    width: \"100%\",\n    \"margin-left\": \"5%\",\n    \"margin-bottom\": \"4.5%\",\n    \"font-size\": \"20px\",\n    \"font-weight\": \"bold\"\n  },\n  errorMessageStyle: {\n    display: \"flex\",\n    \"justify-content\": \"center\",\n    color: \"purple\",\n    \"font-size\": \"20px\",\n    \"font-weight\": \"bold\",\n    \"margin-bottom\": \"2%\"\n  }\n};","map":{"version":3,"sources":["/Users/keremguventurk/Desktop/northwestern/winter2020/bme390-2/Self-Service-Database-UI/src/layouts/Admin.jsx"],"names":["React","Component","Route","Switch","NotificationSystem","AdminNavbar","Footer","Sidebar","CustomButton","style","routes","image","loginBackgroundImage","apiBaseURL","Admin","constructor","props","handleNotificationClick","position","color","Math","floor","random","level","getRoutes","map","prop","key","layout","path","state","accessToken","backToLoginPage","getBrandText","i","length","location","pathname","indexOf","name","handleImageClick","setState","handleColorClick","handleHasImage","hasImage","handleFixedClick","fixedClasses","_notificationSystem","accessGranted","displayedText","loginInfo","username","password","pageDisplayed","bind","textFieldChanged","loginButtonPressed","createDemoFiles","console","log","componentDidMount","refs","notificationSystem","componentDidUpdate","e","window","innerWidth","history","document","documentElement","className","classList","toggle","action","scrollTop","scrollingElement","mainPanel","fieldName","target","title","value","tempLoginInfo","currentComponent","axios","require","link","options","url","method","headers","btoa","then","response","data","result","token","catch","error","styles","NavStyle","mainDivStyle","cardStyle","innerTitleStyle","innerTextField","textFieldStyle","loginButtonStyle","errorMessageStyle","render","page","height","width","backgroundImage","backgroundSize","display","borderRadius","border","backgroundColor","margin"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotificationSystem from \"react-notification-system\";\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\nimport Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport { style } from \"variables/Variables.jsx\";\nimport routes from \"routes.js\";\nimport image from \"assets/img/sidebar-2.jpg\"; /*sidebar-2 is the default hot air balloon image*/\nimport loginBackgroundImage from \"assets/img/nmh.jpg\";\n\nexport const apiBaseURL = \"https://tigernie.com\";\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _notificationSystem: null,\n      image: image,\n      color: \"black\" /*black is the default color for the sidebar*/,\n      hasImage: true,\n      fixedClasses: \"dropdown show-dropdown open\",\n      accessGranted: false,\n      displayedText: \"\",\n      loginInfo: {\n        username: null,\n        password: null\n      }\n    };\n    this.pageDisplayed = this.pageDisplayed.bind(this);\n    this.textFieldChanged = this.textFieldChanged.bind(this);\n    this.loginButtonPressed = this.loginButtonPressed.bind(this);\n    this.backToLoginPage = this.backToLoginPage.bind(this)\n    this.createDemoFiles = this.createDemoFiles.bind(this)\n    console.log(\"HELLO\")\n  }\n\n  handleNotificationClick = position => {\n    var color = Math.floor(Math.random() * 4 + 1);\n    var level;\n    switch (color) {\n      case 1:\n        level = \"success\";\n        break;\n      case 2:\n        level = \"warning\";\n        break;\n      case 3:\n        level = \"error\";\n        break;\n      case 4:\n        level = \"info\";\n        break;\n      default:\n        break;\n    }\n    /*Eliminated the notificatino that pops up in the original template*/\n    /*\n    this.state._notificationSystem.addNotification({\n      title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n      message: (\n        <div>\n          Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n          every web developer.\n        </div>\n      ),\n      level: level,\n      position: position,\n      autoDismiss: 15\n    });\n    */\n  };\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            render={props => (\n              <prop.component\n                {...props}\n                handleClick={this.handleNotificationClick}\n                accessToken={this.state.accessToken}\n                backToLoginPage={this.backToLoginPage}\n              />\n            )}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  handleImageClick = image => {\n    this.setState({ image: image });\n  };\n  handleColorClick = color => {\n    this.setState({ color: color });\n  };\n  handleHasImage = hasImage => {\n    this.setState({ hasImage: hasImage });\n  };\n  handleFixedClick = () => {\n    if (this.state.fixedClasses === \"dropdown\") {\n      this.setState({ fixedClasses: \"dropdown show-dropdown open\" });\n    } else {\n      this.setState({ fixedClasses: \"dropdown\" });\n    }\n  };\n  componentDidMount() {\n    this.setState({ _notificationSystem: this.refs.notificationSystem });\n    var _notificationSystem = this.refs.notificationSystem;\n    var color = Math.floor(Math.random() * 4 + 1);\n    /*\n    var level;\n    switch (color) {\n      case 1:\n        level = \"success\";\n        break;\n      case 2:\n        level = \"warning\";\n        break;\n      case 3:\n        level = \"error\";\n        break;\n      case 4:\n        level = \"info\";\n        break;\n      default:\n        break;\n    }\n     */\n\n    /*\n  _notificationSystem.addNotification({\n    title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n    message: (\n      <div>\n        Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n        every web developer.\n      </div>\n    ),\n    level: level,\n    position: \"tr\",\n    autoDismiss: 15\n  });\n  */\n\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n    }\n    if (e.history.action === \"PUSH\") {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n\n  backToLoginPage() {\n    this.setState({\n      accessGranted: false\n    })\n  }\n\n  //update state loginInfo values according to the values in Text Fields\n  textFieldChanged(e) {\n    var fieldName = e.target.title;\n    var value = e.target.value;\n\n    var tempLoginInfo = this.state.loginInfo;\n    tempLoginInfo[[fieldName]] = value;\n\n    this.setState({\n      loginInfo: tempLoginInfo\n    });\n  }\n\n  //logins the user if the username and password is correct\n  loginButtonPressed() {\n    var username = this.state.loginInfo.username;\n    var password = this.state.loginInfo.password;\n\n    let currentComponent = this;\n    const axios = require(\"axios\");\n\n    var link = apiBaseURL + \"/ssd_api/token\";\n    const options = {\n      url: link,\n      method: 'get',\n      headers: {\n        'Authorization': \"Basic \" + btoa(username+\":\"+password)\n      },\n    };\n\n    axios(options)\n      .then(response => {\n        console.log(response);\n        currentComponent.setState({\n          accessGranted: true,\n          accessToken: response.data.result.token\n        })\n      })\n      .catch(function (error) {\n        currentComponent.setState({\n          displayedText: \"Incorrect username or password. Please try again.\"\n        })\n      });\n  }\n\n  pageDisplayed() {\n    if (this.state.accessGranted) {\n      return (\n        <div className=\"wrapper\">\n          <NotificationSystem ref=\"notificationSystem\" style={style} />\n          <Sidebar\n            {...this.props}\n            routes={routes}\n            image={this.state.image}\n            color={this.state.color}\n            hasImage={this.state.hasImage}\n          />\n          <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n            <AdminNavbar\n              {...this.props}\n              style={styles.NavStyle}\n              brandText={this.getBrandText(this.props.location.pathname)}\n            />\n            <Switch>{this.getRoutes(routes)}</Switch>\n            <Footer />\n            */}\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div style={styles.mainDivStyle}>\n          <div style={styles.cardStyle}>\n            <div style={styles.innerTitleStyle}>\n              Welcome to the NMH Ophthalmology Research Site!\n            </div>\n            <div style={styles.innerTextField}>\n              <div>Username:</div>\n              <input\n                type=\"text\"\n                title=\"username\"\n                style={styles.textFieldStyle}\n                onChange={e => this.textFieldChanged(e)}\n              />\n            </div>\n            <div style={styles.innerTextField}>\n              <div>Password:</div>\n              <input\n                type=\"password\"\n                title=\"password\"\n                style={styles.textFieldStyle}\n                onChange={e => this.textFieldChanged(e)}\n              />\n            </div>\n            <div style={styles.innerTextField}>\n              <CustomButton\n                style={styles.loginButtonStyle}\n                title=\"loginButton\"\n                onClick={() => this.loginButtonPressed()}\n              >\n                Login\n              </CustomButton>\n            </div>\n            <div style={styles.errorMessageStyle}>\n              {this.state.displayedText}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n  render() {\n    var page = this.pageDisplayed();\n    return page;\n  }\n}\n\nexport default Admin;\n\nconst styles = {\n  NavStyle: {\n    \"font-weight\": \"bold\",\n    color: \"black\"\n  },\n  mainDivStyle: {\n    position: \"absolute\",\n    height: \"100%\",\n    width: \"100%\",\n    backgroundImage: `url(${loginBackgroundImage})`,\n    backgroundSize: \"cover\",\n    display: \"flex\",\n    \"flex-direction\": \"row\",\n    \"justify-content\": \"center\",\n    \"align-items\": \"center\"\n  },\n  cardStyle: {\n    width: \"45%\",\n    height: \"70%\",\n    borderRadius: \"7%\",\n    border: \"solid 2px black\",\n    backgroundColor: \"white\",\n    display: \"flex\",\n    \"flex-direction\": \"column\",\n    margin: \"2%\"\n  },\n  textFieldStyle: {\n    width: \"90%\",\n    border: \"solid 2px black\",\n    backgroundColor: \"white\"\n  },\n  loginButtonStyle: {\n    width: \"90%\",\n    color: \"black\",\n    border: \"solid 2px black\",\n    \"font-weight\": \"bold\",\n    \"font-size\": \"20px\",\n    \"background-color\": \"#eef27c\"\n  },\n  innerTitleStyle: {\n    width: \"90%\",\n    borderRadius: \"7%\",\n    backgroundColor: \"white\",\n    display: \"flex\",\n    \"justify-content\": \"center\",\n    \"font-weight\": \"bold\",\n    \"font-size\": \"30px\",\n    margin: \"5%\"\n  },\n  innerTextField: {\n    display: \"flex\",\n    \"flex-direction\": \"column\",\n    width: \"100%\",\n    \"margin-left\": \"5%\",\n    \"margin-bottom\": \"4.5%\",\n    \"font-size\": \"20px\",\n    \"font-weight\": \"bold\"\n  },\n  errorMessageStyle: {\n    display: \"flex\",\n    \"justify-content\": \"center\",\n    color: \"purple\",\n    \"font-size\": \"20px\",\n    \"font-weight\": \"bold\",\n    \"margin-bottom\": \"2%\"\n  }\n};\n"]},"metadata":{},"sourceType":"module"}