{"ast":null,"code":"var _jsxFileName = \"/Users/keremguventurk/Desktop/northwestern/winter2020/bme390-2/Self-Service-Database-UI/src/views/PatientsPage.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n//This is the page that appears after submitting the filters page, containing patient cohort information\n//Feb. 4, 2020 added comments and fixed systemtic diagnosis bug\n//Feb. 10, 2020 added show and hide demonstration buttons. Not sure if it is helpful?\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, Table, Dropdown } from \"react-bootstrap\";\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport TableList from \"./TableList.jsx\";\nimport { apiBaseURL } from \"./Dashboard.jsx\";\nimport { isArray } from \"util\";\n\nconst axios = require(\"axios\");\n\nconst frontendToBackend = {\n  \"Eye Diagnosis\": \"eye_diagnosis\",\n  \"Systemic Diagnosis\": \"systemic_diagnosis\",\n  Age: \"age\",\n  Ethnicity: \"ethnicity\",\n  \"Image Procedure Type\": \"image_procedure_type\",\n  Labs: \"labs\",\n  \"Medication Generic Name\": \"medication_generic_name\",\n  \"Medication Therapuetic Name\": \"medication_therapuetic_name\",\n  \"Left Vision\": \"left_vision\",\n  \"Right Vision\": \"right_vision\",\n  \"Left Pressure\": \"left_pressure\",\n  \"Right Pressure\": \"right_pressure\",\n  \"Patient ID\": \"pt_id\"\n};\n\nfunction isDict(v) {\n  return typeof v === \"object\" && v !== null && !(v instanceof Array) && !(v instanceof Date);\n} //Variables\n//patientsIDs: A list of relevant patient IDs based on the filters\n//patientInfo: Information for each patient obtained from the API\n//filterCategories: The fitler categories that will appear on the table in the patients page (always have patient ID, also images is pushed in getPatients() function below)\n//tableKey:\n//exportPressed: determines whether the export details are shown (incl. export checkboxes) or not (just one single button)\n\n\nclass PatientsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientsIDs: [],\n      patientInfo: [],\n      filterCategories: [\"Patient ID\"],\n      selectedFilterCategories: [],\n      tableKey: 1,\n      displayedMessage: \"\",\n      exportPressed: {\n        display: false\n      }\n    };\n    this._calculateAge = this._calculateAge.bind(this);\n    this.getPatients = this.getPatients.bind(this);\n    this.getData = this.getData.bind(this);\n    this.editData = this.editData.bind(this);\n    this.getFilters = this.getFilters.bind(this);\n    this.categoryFilterPressed = this.categoryFilterPressed.bind(this);\n    this.getTable = this.getTable.bind(this);\n    this.backButtonPressed = this.backButtonPressed.bind(this);\n    this.examsPagePressed = this.examsPagePressed.bind(this);\n    this.exportAllImagesPressed = this.exportAllImagesPressed.bind(this);\n    this.getExport = this.getExport.bind(this);\n    this.exportCategoryPressed = this.exportCategoryPressed.bind(this);\n    this.exportImagesPressed = this.exportImagesPressed.bind(this);\n    this.getFilterSummary = this.getFilterSummary.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPatients();\n  } //calculates and returns the age age_now from date of birth dob1\n\n\n  _calculateAge(dob1) {\n    var today = new Date();\n    var birthDate = new Date(dob1); // create a date object directly from `dob1` argument\n\n    var age_now = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n\n    if (m < 0 || m === 0 && today.getDate() < birthDate.getDate()) {\n      age_now--;\n    }\n\n    return age_now;\n  } //sets up the state of filterCategories, also sets up the state of patientIDs (see around line 118)\n\n\n  getPatients() {\n    if (!this.props.pageStatus.PatientsPage) {\n      return;\n    }\n\n    let data = this.props.pageStatus.PatientsPage; //see submitButtonPressed() for additionalInfo\n\n    let temp_data = {};\n    let tempFilterCategories = this.state[\"filterCategories\"];\n\n    for (var key in data) {\n      var tempValue = data[key];\n\n      if (isDict(tempValue)) {\n        var tempDict = {};\n\n        for (var innerKey in tempValue) {\n          try {\n            var tempNumber = tempValue[innerKey];\n\n            if (tempNumber.search(\"/\") !== -1) {\n              if (innerKey === \"equal\") {\n                tempDict[\"less\"] = tempNumber.substring(0, tempNumber.length - 2) + (parseInt(tempNumber.substring(tempNumber.length - 2, tempNumber.length)) + 1);\n                tempDict[\"more\"] = tempNumber.substring(0, tempNumber.length - 2) + (parseInt(tempNumber.substring(tempNumber.length - 2, tempNumber.length)) - 1);\n              } else if (innerKey === \"between less\") {\n                tempDict[\"more\"] = tempNumber;\n              } else if (innerKey === \"between greater\") {\n                tempDict[\"less\"] = tempNumber;\n              } else if (innerKey === \"greater\") {\n                tempDict[\"more\"] = tempNumber;\n              } else {\n                tempDict[innerKey] = tempNumber;\n              }\n            } else {\n              tempNumber = parseInt(tempNumber);\n\n              if (innerKey === \"equal\") {\n                tempDict[\"less\"] = tempNumber + 1;\n                tempDict[\"more\"] = tempNumber - 1;\n              } else if (innerKey === \"between less\") {\n                tempDict[\"more\"] = tempNumber;\n              } else if (innerKey === \"between greater\") {\n                tempDict[\"less\"] = tempNumber;\n              } else if (innerKey === \"greater\") {\n                tempDict[\"more\"] = tempNumber;\n              } else {\n                tempDict[innerKey] = tempNumber;\n              }\n            }\n          } catch (e) {\n            tempDict[innerKey] = tempValue[innerKey];\n          }\n        }\n\n        tempValue = tempDict;\n      }\n\n      temp_data[frontendToBackend[key]] = tempValue; //frontendToBackend is a dictionary, defined towards the top of this file\n\n      tempFilterCategories.push(key);\n    }\n\n    tempFilterCategories.push(\"Images\");\n    let currentComponent = this;\n    var autToken = \"Basic \" + btoa(this.props.accessToken + \":something\");\n    const options = {\n      url: apiBaseURL + \"/ssd_api/filter\",\n      method: 'post',\n      headers: {\n        'Authorization': autToken\n      },\n      data: {\n        filters: temp_data\n      }\n    };\n    axios(options).then(function (response) {\n      currentComponent.setState({\n        patientsIDs: response.data.result.pt_id\n      }, () => {\n        currentComponent.getData();\n      });\n    }).catch(function (error) {\n      console.log(error);\n\n      if (error.message === \"Request failed with status code 401\") {\n        currentComponent.props.backToLoginPage();\n      }\n    });\n    this.setState({\n      filterCategories: tempFilterCategories,\n      selectedFilterCategories: tempFilterCategories\n    });\n  } //sets this.state.patientInfo to what is obtained from the API\n\n\n  getData() {\n    let currentComponent = this;\n    let patientIDs = this.state.patientsIDs;\n\n    for (var index in patientIDs) {\n      var patientID = patientIDs[index];\n      let link = apiBaseURL + \"/ssd_api/patients?pt_id=\" + patientID.toString();\n      var autToken = \"Basic \" + btoa(this.props.accessToken + \":something\");\n      var options = {\n        url: link,\n        method: 'get',\n        headers: {\n          'Authorization': autToken\n        }\n      };\n      axios(options).then(function (response) {\n        let currentInfo = currentComponent.state.patientInfo;\n        currentInfo.push(response.data.result);\n        currentComponent.setState({\n          patientInfo: currentInfo\n        }, () => {\n          currentComponent.editData();\n        });\n      }).catch(function (error) {\n        console.log(error);\n\n        if (error.message === \"Request failed with status code 401\") {\n          currentComponent.props.backToLoginPage();\n        }\n      });\n      link = apiBaseURL + \"/ssd_api/filter_table_with_ptid?pt_id=\" + patientID.toString() + \"&table_name=pt_deid\";\n      options = {\n        url: link,\n        method: 'get',\n        headers: {\n          'Authorization': autToken\n        }\n      };\n      axios(options).then(function (response) {\n        let currentInfo = currentComponent.state.patientInfo;\n        currentInfo.push(response.data.result);\n        currentComponent.setState({\n          patientInfo: currentInfo\n        }, () => {\n          currentComponent.editData();\n        });\n      }).catch(function (error) {\n        console.log(error);\n\n        if (error.message === \"Request failed with status code 401\") {\n          currentComponent.props.backToLoginPage();\n        }\n      });\n    }\n  } //Obtains the filter categories used, including the CustomButton styling, for the left side of the page\n\n\n  getFilters() {\n    var filter_categories = this.state.filterCategories;\n    var temp_filter_categories = [];\n\n    for (var i = 0; i < filter_categories.length; i++) {\n      var category_name = filter_categories[i];\n      var temp_filter_category = null;\n\n      if (this.state.selectedFilterCategories.indexOf(category_name) !== -1) {\n        temp_filter_category = React.createElement(CustomButton, {\n          style: styles.buttonDivPressed,\n          title: category_name,\n          onClick: e => this.categoryFilterPressed(e),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }, \" \", category_name, \" \");\n      } else {\n        temp_filter_category = React.createElement(CustomButton, {\n          style: styles.buttonDiv,\n          title: category_name,\n          onClick: e => this.categoryFilterPressed(e),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, \" \", category_name, \" \");\n      }\n\n      temp_filter_categories.push(temp_filter_category);\n    }\n\n    return temp_filter_categories;\n  }\n\n  editData() {\n    if (this.state.patientsIDs.length * 2 !== this.state.patientInfo.length) {\n      return;\n    }\n\n    let patientInfo = {};\n\n    for (var i = 0; i < this.state.patientInfo.length; i++) {\n      let patient = this.state.patientInfo[i];\n      let key_list = Object.keys(patient);\n\n      if (key_list[0] !== \"data\") {\n        patientInfo[key_list[0]] = patient[key_list[0]];\n      }\n    }\n\n    for (var j = 0; j < this.state.patientInfo.length; j++) {\n      let patient = this.state.patientInfo[j];\n      let key_list = Object.keys(patient);\n\n      if (key_list[0] === \"data\") {\n        var patientPersonal = patient.data[0];\n        var patientID = patientPersonal.pt_id;\n        var ethnicity = patientPersonal.race_1;\n\n        var age = this._calculateAge(patientPersonal.dob);\n\n        patientInfo[patientID][\"ethnicity\"] = ethnicity;\n        patientInfo[patientID][\"age\"] = age;\n      }\n    }\n\n    this.setState({\n      patientInfo: patientInfo,\n      loaded: \"true\"\n    });\n  } //Loops through each category to create the relevant table info for patient history page\n  //Outside loop goes through each patient ID\n  //Inside loop goes through each filter category of each patient ID\n\n\n  getTable() {\n    var nullTable = React.createElement(Col, {\n      style: styles.titleText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \" No Patient Satisfies This Criteria \"));\n\n    if (!this.state.loaded || !this.state.patientInfo) {\n      return nullTable;\n    }\n\n    let patientInfo = this.state.patientInfo;\n    let categoryTitles = [];\n    let tableData = [];\n\n    for (var i = 0; i < this.state.patientsIDs.length; i++) {\n      let patientID = this.state.patientsIDs[i];\n      let tempPatientInfo = [];\n\n      for (var j = 0; j < this.state.filterCategories.length; j++) {\n        let category = this.state.filterCategories[j];\n\n        if (this.state.selectedFilterCategories.indexOf(category) !== -1) {\n          //if the category is one of the selected, then run this block\n          var value = {};\n\n          if (categoryTitles.indexOf(category) === -1) {\n            categoryTitles.push(category);\n          } //If the patient ID number is pressed, jump to the PatientHistoryPage with the given patientID\n\n\n          if (category === \"Patient ID\") {\n            value[\"type\"] = \"button\";\n            value[\"text\"] = patientID;\n            var tempPageStatus = {};\n            Object.assign(tempPageStatus, this.props.pageStatus);\n            tempPageStatus[\"PatientHistoryPage\"] = {\n              patientID: patientID,\n              patientInfo: patientInfo[patientID]\n            };\n            let newState = {\n              page: \"PatientHistoryPage\",\n              pageStatus: tempPageStatus\n            };\n\n            value[\"submitFunction\"] = newState => this.props.changePage(newState);\n\n            value[\"submitInformation\"] = newState;\n            tempPatientInfo.push(value);\n          } //If images is pressed, jump to the PatientImagesPage\n          else if (category === \"Images\") {\n              value[\"type\"] = \"button\";\n              value[\"text\"] = \"See Images\";\n              var tempPageStatus = {};\n              Object.assign(tempPageStatus, this.props.pageStatus);\n              tempPageStatus[\"PatientImagesPage\"] = {\n                patientID: patientID\n              };\n              let newState = {\n                page: \"PatientImagesPage\",\n                pageStatus: tempPageStatus\n              };\n\n              value[\"submitFunction\"] = newState => this.props.changePage(newState);\n\n              value[\"submitInformation\"] = newState;\n              tempPatientInfo.push(value);\n            } else {\n              var tempCategory = frontendToBackend[category];\n\n              if (category === \"Image Procedure Type\") {\n                tempCategory = \"image_type\";\n              }\n\n              var tempValue = patientInfo[patientID][tempCategory];\n              var text = [];\n\n              if (tempCategory === \"left_vision\" || tempCategory === \"right_vision\") {\n                console.log(patientInfo[patientID]);\n                var tempData = patientInfo[patientID][\"vision\"];\n                var searchWord = \"LEFT\";\n\n                if (tempCategory === \"right_vision\") {\n                  searchWord = \"RIGHT\";\n                }\n\n                for (var index = 0; index < tempData.length; index++) {\n                  var tempVision = tempData[index];\n\n                  if (tempVision.name.search(searchWord) !== -1) {\n                    text.push(tempVision.date.substring(0, 16) + \": \" + tempVision.value);\n                    text.push(React.createElement(\"br\", {\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 428\n                      },\n                      __self: this\n                    }));\n                  }\n                }\n              } else if (isDict(tempValue)) {\n                for (var key in tempValue) {\n                  if (tempValue[key] == null) {\n                    text.push(key);\n                  } else {\n                    text.push(key + \" (\" + tempValue[key].substring(0, 16) + \")\"); // e.g. key is the diagnosis, and tempValue[key] displays the date\n                  }\n\n                  text.push(React.createElement(\"br\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 439\n                    },\n                    __self: this\n                  }));\n                }\n              } else if (isArray(tempValue)) {\n                for (var index = 0; index < tempValue.length; index++) {\n                  if (index % 4 === 3) {\n                    text.push(tempValue[index]);\n                    text.push(React.createElement(\"br\", {\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 446\n                      },\n                      __self: this\n                    }));\n                  } else if (index === tempValue.length - 1) {\n                    text.push(tempValue[index]);\n                  } else {\n                    text.push(tempValue[index] + \", \");\n                  }\n                }\n              } else {\n                text = tempValue;\n              }\n\n              value[\"type\"] = \"string\";\n              value[\"text\"] = text;\n              tempPatientInfo.push(value);\n            }\n        }\n      }\n\n      tableData.push(tempPatientInfo);\n    }\n\n    console.log(\"tableData\", tableData);\n\n    if (tableData.length === 0) {\n      return nullTable;\n    }\n\n    return React.createElement(TableList, {\n      key: this.state.tableKey,\n      columns: categoryTitles,\n      rows: tableData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    });\n  } //If the category filter pressed doesn't exist (first if), then push to selectedFilterCategories, otherwise remain the same\n\n\n  categoryFilterPressed(e) {\n    let category = e.target.title;\n\n    if (this.state.selectedFilterCategories.indexOf(category) === -1) {\n      this.state.selectedFilterCategories.push(category);\n      this.setState({\n        selectedFilterCategories: this.state.selectedFilterCategories,\n        tableKey: this.state.tableKey + 1\n      });\n    } else {\n      var new_list = this.state.selectedFilterCategories.filter(function (name) {\n        return name !== category;\n      });\n      this.setState({\n        selectedFilterCategories: new_list,\n        tableKey: this.state.tableKey + 1\n      });\n    }\n  } //When the back button is pressed, jump to the original filter page while maintaing additionalInfo (stuff relating to the filters the user submitted, retaining \"memory\")\n\n\n  backButtonPressed() {\n    let newState = {\n      page: \"FilterPage\",\n      additionalInfo: this.props.additionalInfo\n    };\n    this.props.changePage(newState);\n  } //When the see all exams button is pressed, jump to the exams page while maintaining the info from patients page and filter page\n\n\n  examsPagePressed() {\n    var tempPageStatus = this.props.pageStatus;\n    tempPageStatus[\"ExamsPage\"] = {\n      patientsIDs: this.state.patientsIDs\n    };\n    let newState = {\n      page: \"ExamsPage\",\n      pageStatus: tempPageStatus\n    };\n    this.props.changePage(newState);\n  } //used in the getExport() function to set the state of \"exportPressed\"\n\n\n  exportAllImagesPressed() {\n    this.setState({\n      exportPressed: {\n        display: !this.state.exportPressed.display\n      }\n    });\n  } //If the cateogry is pressed, then if it was not already pressed, set state to true. Otherwise also set state to true.\n\n\n  exportCategoryPressed(e) {\n    let category = e.target.title;\n\n    if (this.state.exportPressed[category]) {\n      this.setState({\n        exportPressed: {\n          [category]: !this.state.exportPressed.display,\n          display: true\n        }\n      });\n    } else {\n      this.setState({\n        exportPressed: {\n          [category]: true,\n          display: true\n        }\n      });\n    }\n  }\n\n  exportImagesPressed() {\n    //code for exporting all images\n    return null;\n  } //If the export button is pressed, then display the checkboxes with patient ID, diagnosis, image procedure; otherwise, don't display those\n\n\n  getExport() {\n    if (!this.state.exportPressed.display) {\n      return React.createElement(CustomButton, {\n        style: styles.buttonUpperExport,\n        onClick: () => this.exportAllImagesPressed(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }, \"EXPORT ALL IMAGES\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      style: styles.buttonUpperExport,\n      onClick: () => this.exportAllImagesPressed(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }, \"EXPORT ALL IMAGES\"), React.createElement(\"div\", {\n      style: styles.exportDropdownPressed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      title: \"by Patient ID\",\n      onChange: e => this.exportCategoryPressed(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }), \"by Patient ID\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      title: \"by diagnosis\",\n      onChange: e => this.exportCategoryPressed(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    }), \"by diagnosis\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      title: \"by image procedure\",\n      onChange: e => this.exportCategoryPressed(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }), \"by image procedure\")), React.createElement(CustomButton, {\n      style: styles.buttonUpperExport,\n      onClick: () => this.exportImagesPressed(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    }, \"EXPORT IMAGES\"));\n  } //template function that creates legend\n\n\n  createLegend(json) {\n    var legend = [];\n\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(React.createElement(\"i\", {\n        className: type,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622\n        },\n        __self: this\n      }));\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n\n    return legend;\n  } //returns a text of chosen filters to display above table\n\n\n  getFilterSummary() {\n    var selectedFilters = this.props.pageStatus.FilterPage;\n    var text = [];\n    text.push(React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633\n      },\n      __self: this\n    }, \"You have selected these filters:\"));\n    text.push(React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634\n      },\n      __self: this\n    }));\n\n    for (var key in selectedFilters) {\n      var title = key;\n      var tempText = \": \";\n      var tempArray = selectedFilters[key];\n\n      if (isDict(tempArray)) {\n        tempArray = Object.keys(tempArray);\n      }\n\n      for (var index = 0; index < tempArray.length; index++) {\n        if (index !== 0) {\n          tempText += \", \";\n        }\n\n        if (isDict(selectedFilters[key])) {\n          tempText += tempArray[index] + \": \" + selectedFilters[key][tempArray[index]];\n        } else {\n          tempText += tempArray[index];\n        }\n      }\n\n      text.push(React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654\n        },\n        __self: this\n      }, React.createElement(\"u\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655\n        },\n        __self: this\n      }, title)));\n      text.push(tempText);\n      text.push(React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659\n        },\n        __self: this\n      }));\n    }\n\n    return text;\n  } //render displays what is shown on the webpage\n\n\n  render() {\n    console.log(\"state\", this.state);\n    var filterSummary = this.getFilterSummary();\n    var all_filters = this.getFilters();\n    var exportButton = this.getExport();\n    var table = this.getTable();\n    return React.createElement(\"div\", {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: styles.titleStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674\n      },\n      __self: this\n    }, React.createElement(Col, {\n      style: styles.titleText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676\n      },\n      __self: this\n    }, \"Your Patient Cohort\"))), React.createElement(Row, {\n      style: styles.summaryStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679\n      },\n      __self: this\n    }, React.createElement(Col, {\n      style: styles.summaryText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681\n      },\n      __self: this\n    }, filterSummary), React.createElement(\"div\", {\n      style: styles.underMainStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698\n      },\n      __self: this\n    }, \"Dropdown Button\"), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      href: \"#/action-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703\n      },\n      __self: this\n    }, \"Action\"), React.createElement(Dropdown.Item, {\n      href: \"#/action-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704\n      },\n      __self: this\n    }, \"Another action\"), React.createElement(Dropdown.Item, {\n      href: \"#/action-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705\n      },\n      __self: this\n    }, \"Something else\")))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 3,\n      style: styles.sideDivStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      style: styles.buttonDivShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714\n      },\n      __self: this\n    }, \" \", \"Shown\", \" \"), React.createElement(CustomButton, {\n      style: styles.buttonDivHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718\n      },\n      __self: this\n    }, \" \", \"Hidden\", \" \")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723\n      },\n      __self: this\n    }, all_filters)), React.createElement(Col, {\n      sm: 9,\n      style: styles.mainDivStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styles.tableStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728\n      },\n      __self: this\n    }, table), React.createElement(\"div\", {\n      style: styles.displayedMessageStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729\n      },\n      __self: this\n    }, this.state.displayedMessage)))))));\n  }\n\n}\n/* \n<div style={styles.underMainStyle}>\n                    <CustomButton\n                      style={styles.buttonUpperSubmit}\n                      onClick={() => this.backButtonPressed()}\n                    >\n                      BACK TO FILTERS PAGE\n                    </CustomButton>\n                    <CustomButton\n                      style={styles.buttonUpperReset}\n                      onClick={() => this.examsPagePressed()}\n                    >\n                      GO TO EXAMS PAGE\n                    </CustomButton>\n                    {exportButton}\n                  </div> */\n\n\nexport default PatientsPage;\nconst styles = {\n  titleStyle: {\n    height: \"10vh\"\n  },\n  titleText: {\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"center\",\n    \"font-weight\": \"bold\",\n    \"font-size\": \"30px\"\n  },\n  summaryStyle: {\n    \"margin-bottom\": \"2vh\"\n  },\n  summaryText: {\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"flex-end\",\n    \"margin-bottom\": \"2.1vh\",\n    \"margin-right\": \"3vh\"\n  },\n  buttonDiv: {\n    width: \"100%\",\n    margin: \"1vh\",\n    \"background-color\": \"white\",\n    color: \"black\",\n    border: \"solid 2px black\"\n  },\n  buttonDivPressed: {\n    width: \"100%\",\n    margin: \"1vh\",\n    \"background-color\": \"#78deec\",\n    color: \"black\",\n    border: \"solid 2px black\"\n  },\n  buttonDivHide: {\n    width: \"45%\",\n    \"margin-top\": \"1vh\",\n    \"margin-bottom\": \"1vh\",\n    \"margin-left\": \"2vh\",\n    \"background-color\": \"white\",\n    color: \"black\",\n    border: \"solid 2px black\"\n  },\n  buttonDivShow: {\n    width: \"45%\",\n    margin: \"1vh\",\n    \"background-color\": \"#78deec\",\n    color: \"black\",\n    border: \"solid 2px black\"\n  },\n  mainDivCategoryStyle: {\n    height: \"20vh\",\n    overflow: \"scroll\",\n    border: \"solid 2px black\",\n    margin: \"1vh\"\n  },\n  mainDivButtonTitle: {\n    display: \"flex\",\n    \"justify-content\": \"center\",\n    \"font-weight\": \"bold\",\n    \"text-decoration\": \"underline\"\n  },\n  underMainStyle: {\n    display: \"flex\",\n    \"flex-direction\": \"column\",\n    \"justify-content\": \"center\",\n    \"align-items\": \"center\",\n    \"padding-right\": \"1vh\",\n    \"margin-left\": \"10vh\"\n  },\n  buttonUpperSubmit: {\n    width: \"40vh\",\n    color: \"black\",\n    border: \"solid 2px black\",\n    \"font-weight\": \"bold\",\n    \"background-color\": \"#eef27c\"\n  },\n  buttonUpperReset: {\n    width: \"40vh\",\n    color: \"black\",\n    border: \"solid 2px black\",\n    \"font-weight\": \"bold\",\n    \"background-color\": \"#eef27c\",\n    \"margin-top\": \"1vh\"\n  },\n  buttonUpperExport: {\n    width: \"40vh\",\n    color: \"black\",\n    border: \"solid 2px black\",\n    \"font-weight\": \"bold\",\n    \"background-color\": \"#eef27c\",\n    \"margin-top\": \"1vh\",\n    \"margin-bottom\": \"1vh\"\n  },\n  displayedMessageStyle: {\n    display: \"flex\",\n    \"justify-content\": \"flex-start\",\n    color: \"black\",\n    \"font-size\": \"16px\",\n    \"font-weight\": \"bold\",\n    \"margin-left\": \"3%\"\n  }\n};","map":{"version":3,"sources":["/Users/keremguventurk/Desktop/northwestern/winter2020/bme390-2/Self-Service-Database-UI/src/views/PatientsPage.jsx"],"names":["React","Component","Grid","Row","Col","Table","Dropdown","CustomButton","TableList","apiBaseURL","isArray","axios","require","frontendToBackend","Age","Ethnicity","Labs","isDict","v","Array","Date","PatientsPage","constructor","props","state","patientsIDs","patientInfo","filterCategories","selectedFilterCategories","tableKey","displayedMessage","exportPressed","display","_calculateAge","bind","getPatients","getData","editData","getFilters","categoryFilterPressed","getTable","backButtonPressed","examsPagePressed","exportAllImagesPressed","getExport","exportCategoryPressed","exportImagesPressed","getFilterSummary","componentDidMount","dob1","today","birthDate","age_now","getFullYear","m","getMonth","getDate","pageStatus","data","temp_data","tempFilterCategories","key","tempValue","tempDict","innerKey","tempNumber","search","substring","length","parseInt","e","push","currentComponent","autToken","btoa","accessToken","options","url","method","headers","filters","then","response","setState","result","pt_id","catch","error","console","log","message","backToLoginPage","patientIDs","index","patientID","link","toString","currentInfo","filter_categories","temp_filter_categories","i","category_name","temp_filter_category","indexOf","styles","buttonDivPressed","buttonDiv","patient","key_list","Object","keys","j","patientPersonal","ethnicity","race_1","age","dob","loaded","nullTable","titleText","categoryTitles","tableData","tempPatientInfo","category","value","tempPageStatus","assign","newState","page","changePage","tempCategory","text","tempData","searchWord","tempVision","name","date","target","title","new_list","filter","additionalInfo","buttonUpperExport","exportDropdownPressed","createLegend","json","legend","type","selectedFilters","FilterPage","tempText","tempArray","render","filterSummary","all_filters","exportButton","table","container","titleStyle","summaryStyle","summaryText","underMainStyle","sideDivStyle","buttonDivShow","buttonDivHide","mainDivStyle","tableStyle","displayedMessageStyle","height","width","margin","color","border","mainDivCategoryStyle","overflow","mainDivButtonTitle","buttonUpperSubmit","buttonUpperReset"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n\n//This is the page that appears after submitting the filters page, containing patient cohort information\n//Feb. 4, 2020 added comments and fixed systemtic diagnosis bug\n//Feb. 10, 2020 added show and hide demonstration buttons. Not sure if it is helpful?\n\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, Table, Dropdown } from \"react-bootstrap\";\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport TableList from \"./TableList.jsx\";\nimport { apiBaseURL } from \"./Dashboard.jsx\";\nimport { isArray } from \"util\";\n\nconst axios = require(\"axios\");\n\nconst frontendToBackend = {\n  \"Eye Diagnosis\": \"eye_diagnosis\",\n  \"Systemic Diagnosis\": \"systemic_diagnosis\",\n  Age: \"age\",\n  Ethnicity: \"ethnicity\",\n  \"Image Procedure Type\": \"image_procedure_type\",\n  Labs: \"labs\",\n  \"Medication Generic Name\": \"medication_generic_name\",\n  \"Medication Therapuetic Name\": \"medication_therapuetic_name\",\n  \"Left Vision\": \"left_vision\",\n  \"Right Vision\": \"right_vision\",\n  \"Left Pressure\": \"left_pressure\",\n  \"Right Pressure\": \"right_pressure\",\n  \"Patient ID\": \"pt_id\"\n};\n\nfunction isDict(v) {\n  return (\n    typeof v === \"object\" &&\n    v !== null &&\n    !(v instanceof Array) &&\n    !(v instanceof Date)\n  );\n}\n\n//Variables\n//patientsIDs: A list of relevant patient IDs based on the filters\n//patientInfo: Information for each patient obtained from the API\n//filterCategories: The fitler categories that will appear on the table in the patients page (always have patient ID, also images is pushed in getPatients() function below)\n//tableKey:\n//exportPressed: determines whether the export details are shown (incl. export checkboxes) or not (just one single button)\nclass PatientsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientsIDs: [],\n      patientInfo: [],\n      filterCategories: [\"Patient ID\"],\n      selectedFilterCategories: [],\n      tableKey: 1,\n      displayedMessage: \"\",\n      exportPressed: {\n        display: false\n      }\n    };\n    this._calculateAge = this._calculateAge.bind(this);\n    this.getPatients = this.getPatients.bind(this);\n    this.getData = this.getData.bind(this);\n    this.editData = this.editData.bind(this);\n    this.getFilters = this.getFilters.bind(this);\n    this.categoryFilterPressed = this.categoryFilterPressed.bind(this);\n    this.getTable = this.getTable.bind(this);\n    this.backButtonPressed = this.backButtonPressed.bind(this);\n    this.examsPagePressed = this.examsPagePressed.bind(this);\n    this.exportAllImagesPressed = this.exportAllImagesPressed.bind(this);\n    this.getExport = this.getExport.bind(this);\n    this.exportCategoryPressed = this.exportCategoryPressed.bind(this);\n    this.exportImagesPressed = this.exportImagesPressed.bind(this);\n    this.getFilterSummary = this.getFilterSummary.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPatients();\n  }\n\n  //calculates and returns the age age_now from date of birth dob1\n  _calculateAge(dob1) {\n    var today = new Date();\n    var birthDate = new Date(dob1); // create a date object directly from `dob1` argument\n    var age_now = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age_now--;\n    }\n    return age_now;\n  }\n\n  //sets up the state of filterCategories, also sets up the state of patientIDs (see around line 118)\n  getPatients() {\n\n    if (!this.props.pageStatus.PatientsPage) {\n      return\n    }\n\n    let data = this.props.pageStatus.PatientsPage; //see submitButtonPressed() for additionalInfo\n    let temp_data = {};\n    let tempFilterCategories = this.state[\"filterCategories\"];\n\n    for (var key in data) {\n      var tempValue = data[key]\n      if (isDict(tempValue)) {\n        var tempDict = {}\n        for (var innerKey in tempValue) {\n          try {\n            var tempNumber = tempValue[innerKey]\n            if (tempNumber.search(\"/\") !== -1) {\n              if (innerKey === \"equal\") {\n                tempDict[\"less\"] = tempNumber.substring(0, tempNumber.length - 2) + (parseInt(tempNumber.substring(tempNumber.length - 2, tempNumber.length)) + 1)\n                tempDict[\"more\"] = tempNumber.substring(0, tempNumber.length - 2) + (parseInt(tempNumber.substring(tempNumber.length - 2, tempNumber.length)) - 1)\n              }\n              else if (innerKey === \"between less\") {\n                tempDict[\"more\"] = tempNumber\n              }\n              else if (innerKey === \"between greater\") {\n                tempDict[\"less\"] = tempNumber\n              }\n              else if (innerKey === \"greater\") {\n                tempDict[\"more\"] = tempNumber\n              }\n              else {\n                tempDict[innerKey] = tempNumber\n              }\n            }\n            else {\n              tempNumber = parseInt(tempNumber)\n              if (innerKey === \"equal\") {\n                tempDict[\"less\"] = tempNumber + 1\n                tempDict[\"more\"] = tempNumber - 1\n              }\n              else if (innerKey === \"between less\") {\n                tempDict[\"more\"] = tempNumber\n              }\n              else if (innerKey === \"between greater\") {\n                tempDict[\"less\"] = tempNumber\n              }\n              else if (innerKey === \"greater\") {\n                tempDict[\"more\"] = tempNumber\n              }\n              else {\n                tempDict[innerKey] = tempNumber\n              }\n            }\n          }\n          catch (e) {\n            tempDict[innerKey] = tempValue[innerKey]\n          }\n        }\n        tempValue = tempDict\n      }\n      temp_data[frontendToBackend[key]] = tempValue; //frontendToBackend is a dictionary, defined towards the top of this file\n      tempFilterCategories.push(key);\n    }\n    tempFilterCategories.push(\"Images\");\n\n    let currentComponent = this;\n\n    var autToken = \"Basic \" + btoa(this.props.accessToken + \":something\")\n\n    const options = {\n      url: apiBaseURL + \"/ssd_api/filter\",\n      method: 'post',\n      headers: {\n        'Authorization': autToken\n      },\n      data: {\n        filters: temp_data\n      }\n    };\n    axios(options)\n      .then(function (response) {\n        currentComponent.setState(\n          { patientsIDs: response.data.result.pt_id },\n          () => {\n            currentComponent.getData();\n          }\n        );\n      })\n      .catch(function (error) {\n        console.log(error)\n        if (error.message === \"Request failed with status code 401\") {\n          currentComponent.props.backToLoginPage()\n        }\n      });\n\n    this.setState({\n      filterCategories: tempFilterCategories,\n      selectedFilterCategories: tempFilterCategories\n    });\n  }\n\n  //sets this.state.patientInfo to what is obtained from the API\n  getData() {\n    let currentComponent = this;\n    let patientIDs = this.state.patientsIDs;\n    for (var index in patientIDs) {\n      var patientID = patientIDs[index];\n      let link = apiBaseURL + \"/ssd_api/patients?pt_id=\" + patientID.toString();\n      var autToken = \"Basic \" + btoa(this.props.accessToken + \":something\")\n\n      var options = {\n        url: link,\n        method: 'get',\n        headers: {\n          'Authorization': autToken\n        },\n      };\n\n      axios(options)\n        .then(function (response) {\n          let currentInfo = currentComponent.state.patientInfo;\n          currentInfo.push(response.data.result);\n          currentComponent.setState({ patientInfo: currentInfo }, () => {\n            currentComponent.editData();\n          });\n        })\n        .catch(function (error) {\n          console.log(error);\n          if (error.message === \"Request failed with status code 401\") {\n            currentComponent.props.backToLoginPage()\n          }\n        });\n\n      link =\n        apiBaseURL +\n        \"/ssd_api/filter_table_with_ptid?pt_id=\" +\n        patientID.toString() +\n        \"&table_name=pt_deid\";\n\n      options = {\n        url: link,\n        method: 'get',\n        headers: {\n          'Authorization': autToken\n        },\n      };\n      axios(options)\n        .then(function (response) {\n          let currentInfo = currentComponent.state.patientInfo;\n          currentInfo.push(response.data.result);\n          currentComponent.setState({ patientInfo: currentInfo }, () => {\n            currentComponent.editData();\n          });\n        })\n        .catch(function (error) {\n          console.log(error);\n          if (error.message === \"Request failed with status code 401\") {\n            currentComponent.props.backToLoginPage()\n          }\n        });\n    }\n  }\n\n  //Obtains the filter categories used, including the CustomButton styling, for the left side of the page\n  getFilters() {\n    var filter_categories = this.state.filterCategories;\n    var temp_filter_categories = [];\n\n    for (var i = 0; i < filter_categories.length; i++) {\n      var category_name = filter_categories[i];\n      var temp_filter_category = null;\n      if (this.state.selectedFilterCategories.indexOf(category_name) !== -1) {\n        temp_filter_category = (\n          <CustomButton\n            style={styles.buttonDivPressed}\n            title={category_name}\n            onClick={e => this.categoryFilterPressed(e)}\n          >\n            {\" \"}\n            {category_name}{\" \"}\n          </CustomButton>\n        );\n      } else {\n        temp_filter_category = (\n          <CustomButton\n            style={styles.buttonDiv}\n            title={category_name}\n            onClick={e => this.categoryFilterPressed(e)}\n          >\n            {\" \"}\n            {category_name}{\" \"}\n          </CustomButton>\n        );\n      }\n      temp_filter_categories.push(temp_filter_category);\n    }\n    return temp_filter_categories;\n  }\n\n  editData() {\n\n    if (this.state.patientsIDs.length * 2 !== this.state.patientInfo.length) {\n      return;\n    }\n    let patientInfo = {};\n\n    for (var i = 0; i < this.state.patientInfo.length; i++) {\n      let patient = this.state.patientInfo[i];\n      let key_list = Object.keys(patient);\n      if (key_list[0] !== \"data\") {\n        patientInfo[key_list[0]] = patient[key_list[0]];\n      }\n    }\n\n    for (var j = 0; j < this.state.patientInfo.length; j++) {\n      let patient = this.state.patientInfo[j];\n      let key_list = Object.keys(patient);\n      if (key_list[0] === \"data\") {\n        var patientPersonal = patient.data[0];\n        var patientID = patientPersonal.pt_id;\n        var ethnicity = patientPersonal.race_1;\n        var age = this._calculateAge(patientPersonal.dob);\n        patientInfo[patientID][\"ethnicity\"] = ethnicity;\n        patientInfo[patientID][\"age\"] = age;\n      }\n    }\n    this.setState({\n      patientInfo: patientInfo,\n      loaded: \"true\"\n    });\n  }\n\n  //Loops through each category to create the relevant table info for patient history page\n  //Outside loop goes through each patient ID\n  //Inside loop goes through each filter category of each patient ID\n  getTable() {\n\n    var nullTable =\n      <Col style={styles.titleText}>\n        <div> No Patient Satisfies This Criteria </div>\n      </Col>\n\n    if (!this.state.loaded || !this.state.patientInfo) {\n      return nullTable;\n\n    }\n\n    let patientInfo = this.state.patientInfo;\n    let categoryTitles = [];\n    let tableData = [];\n    for (var i = 0; i < this.state.patientsIDs.length; i++) {\n      let patientID = this.state.patientsIDs[i];\n      let tempPatientInfo = [];\n      for (var j = 0; j < this.state.filterCategories.length; j++) {\n        let category = this.state.filterCategories[j];\n        if (this.state.selectedFilterCategories.indexOf(category) !== -1) {\n          //if the category is one of the selected, then run this block\n          var value = {};\n          if (categoryTitles.indexOf(category) === -1) {\n            categoryTitles.push(category);\n          }\n          //If the patient ID number is pressed, jump to the PatientHistoryPage with the given patientID\n          if (category === \"Patient ID\") {\n            value[\"type\"] = \"button\";\n            value[\"text\"] = patientID;\n            var tempPageStatus = {}\n            Object.assign(tempPageStatus, this.props.pageStatus)\n            tempPageStatus[\"PatientHistoryPage\"] = {\n              patientID: patientID,\n              patientInfo: patientInfo[patientID]\n            };\n            let newState = {\n              page: \"PatientHistoryPage\",\n              pageStatus: tempPageStatus\n            };\n            value[\"submitFunction\"] = newState =>\n              this.props.changePage(newState);\n            value[\"submitInformation\"] = newState;\n            tempPatientInfo.push(value);\n          }\n          //If images is pressed, jump to the PatientImagesPage\n          else if (category === \"Images\") {\n            value[\"type\"] = \"button\";\n            value[\"text\"] = \"See Images\";\n            var tempPageStatus = {}\n            Object.assign(tempPageStatus, this.props.pageStatus)\n            tempPageStatus[\"PatientImagesPage\"] = {\n              patientID: patientID\n            };\n            let newState = {\n              page: \"PatientImagesPage\",\n              pageStatus: tempPageStatus\n            };\n            value[\"submitFunction\"] = newState =>\n              this.props.changePage(newState);\n            value[\"submitInformation\"] = newState;\n            tempPatientInfo.push(value);\n          }\n          else {\n            var tempCategory = frontendToBackend[category]\n            if (category === \"Image Procedure Type\") {\n              tempCategory = \"image_type\"\n            }\n            var tempValue = patientInfo[patientID][tempCategory];\n            var text = [];\n\n            if (tempCategory === \"left_vision\" || tempCategory === \"right_vision\") {\n              console.log(patientInfo[patientID])\n              var tempData = patientInfo[patientID][\"vision\"]\n              var searchWord = \"LEFT\"\n              if (tempCategory === \"right_vision\") {\n                searchWord = \"RIGHT\"\n              }\n              for (var index = 0; index < tempData.length; index++) {\n                var tempVision = tempData[index]\n                if (tempVision.name.search(searchWord) !== -1) {\n                  text.push(tempVision.date.substring(0, 16) + \": \" + tempVision.value)\n                  text.push(<br />);\n                }\n              }\n            }\n            else if (isDict(tempValue)) {\n              for (var key in tempValue) {\n                if (tempValue[key] == null) {\n                  text.push(key);\n                } else {\n                  text.push(key + \" (\" + tempValue[key].substring(0, 16) + \")\"); // e.g. key is the diagnosis, and tempValue[key] displays the date\n                }\n                text.push(<br />);\n              }\n            }\n            else if (isArray(tempValue)) {\n              for (var index = 0; index < tempValue.length; index++) {\n                if (index % 4 === 3) {\n                  text.push(tempValue[index])\n                  text.push(<br />);\n                }\n                else if (index === tempValue.length - 1) {\n                  text.push(tempValue[index])\n                }\n                else {\n                  text.push(tempValue[index] + \", \")\n                }\n              }\n            }\n            else {\n              text = tempValue;\n            }\n            value[\"type\"] = \"string\";\n            value[\"text\"] = text;\n            tempPatientInfo.push(value);\n          }\n        }\n      }\n      tableData.push(tempPatientInfo);\n    }\n\n    console.log(\"tableData\", tableData)\n\n    if (tableData.length === 0) {\n      return (\n        nullTable\n      )\n    }\n\n    return (\n      <TableList\n        key={this.state.tableKey}\n        columns={categoryTitles}\n        rows={tableData}\n      ></TableList>\n    );\n  }\n\n  //If the category filter pressed doesn't exist (first if), then push to selectedFilterCategories, otherwise remain the same\n  categoryFilterPressed(e) {\n    let category = e.target.title;\n    if (this.state.selectedFilterCategories.indexOf(category) === -1) {\n      this.state.selectedFilterCategories.push(category);\n      this.setState({\n        selectedFilterCategories: this.state.selectedFilterCategories,\n        tableKey: this.state.tableKey + 1\n      });\n    } else {\n      var new_list = this.state.selectedFilterCategories.filter(function (name) {\n        return name !== category;\n      });\n      this.setState({\n        selectedFilterCategories: new_list,\n        tableKey: this.state.tableKey + 1\n      });\n    }\n  }\n\n  //When the back button is pressed, jump to the original filter page while maintaing additionalInfo (stuff relating to the filters the user submitted, retaining \"memory\")\n  backButtonPressed() {\n    let newState = {\n      page: \"FilterPage\",\n      additionalInfo: this.props.additionalInfo\n    };\n    this.props.changePage(newState);\n  }\n\n  //When the see all exams button is pressed, jump to the exams page while maintaining the info from patients page and filter page\n  examsPagePressed() {\n    var tempPageStatus = this.props.pageStatus;\n    tempPageStatus[\"ExamsPage\"] = {\n      patientsIDs: this.state.patientsIDs\n    };\n    let newState = {\n      page: \"ExamsPage\",\n      pageStatus: tempPageStatus\n    };\n    this.props.changePage(newState);\n  }\n\n  //used in the getExport() function to set the state of \"exportPressed\"\n  exportAllImagesPressed() {\n    this.setState({\n      exportPressed: {\n        display: !this.state.exportPressed.display\n      }\n    });\n  }\n\n  //If the cateogry is pressed, then if it was not already pressed, set state to true. Otherwise also set state to true.\n  exportCategoryPressed(e) {\n    let category = e.target.title;\n    if (this.state.exportPressed[category]) {\n      this.setState({\n        exportPressed: {\n          [category]: !this.state.exportPressed.display,\n          display: true\n        }\n      });\n    } else {\n      this.setState({\n        exportPressed: {\n          [category]: true,\n          display: true\n        }\n      });\n    }\n  }\n\n  exportImagesPressed() {\n    //code for exporting all images\n    return null;\n  }\n\n  //If the export button is pressed, then display the checkboxes with patient ID, diagnosis, image procedure; otherwise, don't display those\n  getExport() {\n    if (!this.state.exportPressed.display) {\n      return (\n        <CustomButton\n          style={styles.buttonUpperExport}\n          onClick={() => this.exportAllImagesPressed()}\n        >\n          EXPORT ALL IMAGES\n        </CustomButton>\n      );\n    }\n    return (\n      <div>\n        <CustomButton\n          style={styles.buttonUpperExport}\n          onClick={() => this.exportAllImagesPressed()}\n        >\n          EXPORT ALL IMAGES\n        </CustomButton>\n        <div style={styles.exportDropdownPressed}>\n          <div>\n            <input\n              type=\"checkbox\"\n              title={\"by Patient ID\"}\n              onChange={e => this.exportCategoryPressed(e)}\n            />\n            by Patient ID\n          </div>\n          <div>\n            <input\n              type=\"checkbox\"\n              title={\"by diagnosis\"}\n              onChange={e => this.exportCategoryPressed(e)}\n            />\n            by diagnosis\n          </div>\n          <div>\n            <input\n              type=\"checkbox\"\n              title={\"by image procedure\"}\n              onChange={e => this.exportCategoryPressed(e)}\n            />\n            by image procedure\n          </div>\n        </div>\n        <CustomButton\n          style={styles.buttonUpperExport}\n          onClick={() => this.exportImagesPressed()}\n        >\n          EXPORT IMAGES\n        </CustomButton>\n      </div>\n    );\n  }\n\n  //template function that creates legend\n  createLegend(json) {\n    var legend = [];\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(<i className={type} key={i} />);\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n    return legend;\n  }\n\n  //returns a text of chosen filters to display above table\n  getFilterSummary() {\n    var selectedFilters = this.props.pageStatus.FilterPage;\n    var text = [];\n    text.push(<b>You have selected these filters:</b>);\n    text.push(<br />);\n    for (var key in selectedFilters) {\n      var title = key;\n      var tempText = \": \";\n      var tempArray = selectedFilters[key]\n      if (isDict(tempArray)) {\n        tempArray = Object.keys(tempArray)\n      }\n      for (var index = 0; index < tempArray.length; index++) {\n        if (index !== 0) {\n          tempText += \", \";\n        }\n        if (isDict(selectedFilters[key])) {\n          tempText += tempArray[index] + \": \" + selectedFilters[key][tempArray[index]]\n        }\n        else {\n          tempText += tempArray[index];\n        }\n      }\n      text.push(\n        <b>\n          <u>{title}</u>\n        </b>\n      );\n      text.push(tempText);\n      text.push(<br />);\n    }\n    return text;\n  }\n\n  //render displays what is shown on the webpage\n  render() {\n    console.log(\"state\", this.state);\n    var filterSummary = this.getFilterSummary();\n    var all_filters = this.getFilters();\n    var exportButton = this.getExport();\n    var table = this.getTable();\n    return (\n      <div style={styles.container}>\n        <Grid fluid>\n          <Row style={styles.titleStyle}>\n            <Col style={styles.titleText}>\n              <div>Your Patient Cohort</div>\n            </Col>\n          </Row>\n          <Row style={styles.summaryStyle}>\n            <Col style={styles.summaryText}>\n              <div>{filterSummary}</div>\n              <div style={styles.underMainStyle}>\n                {/* <CustomButton\n                  style={styles.buttonUpperSubmit}\n                  onClick={() => this.backButtonPressed()}\n                >\n                  BACK TO FILTERS PAGE\n                    </CustomButton>\n                <CustomButton\n                  style={styles.buttonUpperReset}\n                  onClick={() => this.examsPagePressed()}\n                >\n                  GO TO EXAMS PAGE\n                    </CustomButton>\n                {exportButton} */}\n\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    Dropdown Button\n  </Dropdown.Toggle>\n\n                  <Dropdown.Menu>\n                    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={3} style={styles.sideDivStyle}>\n              <Row>\n                <CustomButton style={styles.buttonDivShow}>\n                  {\" \"}\n                  Shown{\" \"}\n                </CustomButton>\n                <CustomButton style={styles.buttonDivHide}>\n                  {\" \"}\n                  Hidden{\" \"}\n                </CustomButton>\n              </Row>\n              <Row>{all_filters}</Row>\n            </Col>\n            <Col sm={9} style={styles.mainDivStyle}>\n              <Grid fluid>\n                <Row>\n                  <div style={styles.tableStyle}>{table}</div>\n                  <div style={styles.displayedMessageStyle}>\n                    {this.state.displayedMessage}\n                  </div>\n                </Row>\n              </Grid>\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n/* \n<div style={styles.underMainStyle}>\n                    <CustomButton\n                      style={styles.buttonUpperSubmit}\n                      onClick={() => this.backButtonPressed()}\n                    >\n                      BACK TO FILTERS PAGE\n                    </CustomButton>\n                    <CustomButton\n                      style={styles.buttonUpperReset}\n                      onClick={() => this.examsPagePressed()}\n                    >\n                      GO TO EXAMS PAGE\n                    </CustomButton>\n                    {exportButton}\n                  </div> */\n\nexport default PatientsPage;\n\nconst styles = {\n  titleStyle: {\n    height: \"10vh\"\n  },\n  titleText: {\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"center\",\n    \"font-weight\": \"bold\",\n    \"font-size\": \"30px\"\n  },\n  summaryStyle: {\n    \"margin-bottom\": \"2vh\"\n  },\n  summaryText: {\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"flex-end\",\n    \"margin-bottom\": \"2.1vh\",\n    \"margin-right\": \"3vh\"\n  },\n  buttonDiv: {\n    width: \"100%\",\n    margin: \"1vh\",\n    \"background-color\": \"white\",\n    color: \"black\",\n    border: \"solid 2px black\"\n  },\n  buttonDivPressed: {\n    width: \"100%\",\n    margin: \"1vh\",\n    \"background-color\": \"#78deec\",\n    color: \"black\",\n    border: \"solid 2px black\"\n  },\n  buttonDivHide: {\n    width: \"45%\",\n    \"margin-top\": \"1vh\",\n    \"margin-bottom\": \"1vh\",\n    \"margin-left\": \"2vh\",\n    \"background-color\": \"white\",\n    color: \"black\",\n    border: \"solid 2px black\"\n  },\n  buttonDivShow: {\n    width: \"45%\",\n    margin: \"1vh\",\n    \"background-color\": \"#78deec\",\n    color: \"black\",\n    border: \"solid 2px black\"\n  },\n  mainDivCategoryStyle: {\n    height: \"20vh\",\n    overflow: \"scroll\",\n    border: \"solid 2px black\",\n    margin: \"1vh\"\n  },\n  mainDivButtonTitle: {\n    display: \"flex\",\n    \"justify-content\": \"center\",\n    \"font-weight\": \"bold\",\n    \"text-decoration\": \"underline\"\n  },\n  underMainStyle: {\n    display: \"flex\",\n    \"flex-direction\": \"column\",\n    \"justify-content\": \"center\",\n    \"align-items\": \"center\",\n    \"padding-right\": \"1vh\",\n    \"margin-left\": \"10vh\",\n  },\n  buttonUpperSubmit: {\n    width: \"40vh\",\n    color: \"black\",\n    border: \"solid 2px black\",\n    \"font-weight\": \"bold\",\n    \"background-color\": \"#eef27c\"\n  },\n  buttonUpperReset: {\n    width: \"40vh\",\n    color: \"black\",\n    border: \"solid 2px black\",\n    \"font-weight\": \"bold\",\n    \"background-color\": \"#eef27c\",\n    \"margin-top\": \"1vh\"\n  },\n  buttonUpperExport: {\n    width: \"40vh\",\n    color: \"black\",\n    border: \"solid 2px black\",\n    \"font-weight\": \"bold\",\n    \"background-color\": \"#eef27c\",\n    \"margin-top\": \"1vh\",\n    \"margin-bottom\": \"1vh\"\n  },\n  displayedMessageStyle: {\n    display: \"flex\",\n    \"justify-content\": \"flex-start\",\n    color: \"black\",\n    \"font-size\": \"16px\",\n    \"font-weight\": \"bold\",\n    \"margin-left\": \"3%\"\n  }\n};\n"]},"metadata":{},"sourceType":"module"}