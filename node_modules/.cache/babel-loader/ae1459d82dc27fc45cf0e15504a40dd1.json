{"ast":null,"code":"var _jsxFileName = \"/Users/keremguventurk/Desktop/northwestern/winter2020/bme390-2/Self-Service-Database-UI/src/views/TableList.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, Table } from \"react-bootstrap\"; // import Card from \"components/Card/Card.jsx\";\n\nimport { thArray, tdArray } from \"variables/Variables.jsx\";\nimport CustomButton from \"components/CustomButton/CustomButton\";\n\nclass TableList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: this.props.columns,\n      rows: this.props.rows\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.columns.map((prop, key) => {\n      return React.createElement(\"th\", {\n        key: key,\n        style: styles.TableTitleStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, prop);\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.rows.map((prop, key) => {\n      return React.createElement(\"tr\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, prop.map((prop, key) => {\n        if (!prop.hasOwnProperty(\"type\")) {\n          var type = null;\n          var text = prop[\"text\"];\n        } else if (prop.hasOwnProperty(\"type\")) {\n          var type = prop[\"type\"];\n          var text = prop[\"text\"];\n        }\n\n        if (type === \"button\") {\n          var submitFunction = prop[\"submitFunction\"];\n          var submitInformation = prop[\"submitInformation\"];\n        }\n\n        if (type === \"button\") {\n          return React.createElement(\"td\", {\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, React.createElement(CustomButton, {\n            style: styles.button,\n            onClick: () => submitFunction(submitInformation),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, text));\n        }\n\n        return React.createElement(\"td\", {\n          key: key,\n          style: styles.TableFontStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, text);\n      }));\n    })))))));\n  }\n\n}\n\nexport default TableList;\nconst styles = {\n  button: {\n    width: \"8em\",\n    margin: \"1vh\",\n    \"background-color\": \"#d4d5d7\",\n    color: \"black\",\n    border: \"solid 5px black\"\n  },\n  // TableStyle: {\n  //   border: \"solid 2 px black\"\n  // },\n  TableTitleStyle: {\n    \"font-weight\": \"bold\",\n    color: \"black\"\n  },\n  TableFontStyle: {\n    color: \"black\"\n  }\n};","map":{"version":3,"sources":["/Users/keremguventurk/Desktop/northwestern/winter2020/bme390-2/Self-Service-Database-UI/src/views/TableList.jsx"],"names":["React","Component","Grid","Row","Col","Table","thArray","tdArray","CustomButton","TableList","constructor","props","state","columns","rows","render","map","prop","key","styles","TableTitleStyle","hasOwnProperty","type","text","submitFunction","submitInformation","button","TableFontStyle","width","margin","color","border"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, Table } from \"react-bootstrap\";\n\n// import Card from \"components/Card/Card.jsx\";\nimport { thArray, tdArray } from \"variables/Variables.jsx\";\nimport CustomButton from \"components/CustomButton/CustomButton\";\n\nclass TableList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: this.props.columns,\n      rows: this.props.rows\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col md={12}>\n              {/*Commented this out to not use Card*/}\n              {/*\n              <Card\n                title=\"Patient Cohort\"\n                category=\"Here is a table of all patients that match your criteria\"\n                ctTableFullWidth\n                ctTableResponsive\n              content={*/}\n              <Table striped bordered hover responsive variant=\"dark\">\n                <thead>\n                  <tr>\n                    {this.state.columns.map((prop, key) => {\n                      return (\n                        <th key={key} style={styles.TableTitleStyle}>\n                          {prop}\n                        </th>\n                      );\n                    })}\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.rows.map((prop, key) => {\n                    return (\n                      <tr key={key}>\n                        {prop.map((prop, key) => {\n                          if (!prop.hasOwnProperty(\"type\")) {\n                            var type = null;\n                            var text = prop[\"text\"];\n                          } else if (prop.hasOwnProperty(\"type\")) {\n                            var type = prop[\"type\"];\n                            var text = prop[\"text\"];\n                          }\n                          if (type === \"button\") {\n                            var submitFunction = prop[\"submitFunction\"];\n                            var submitInformation = prop[\"submitInformation\"];\n                          }\n                          if (type === \"button\") {\n                            return (\n                              <td key={key}>\n                                <CustomButton\n                                  style={styles.button}\n                                  onClick={() =>\n                                    submitFunction(submitInformation)\n                                  }\n                                >\n                                  {text}\n                                </CustomButton>\n                              </td>\n                            );\n                          }\n                          return (\n                            <td key={key} style={styles.TableFontStyle}>\n                              {text}\n                            </td>\n                          );\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n              {/*}}\n              />*/}\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default TableList;\n\nconst styles = {\n  button: {\n    width: \"8em\",\n    margin: \"1vh\",\n    \"background-color\": \"#d4d5d7\",\n    color: \"black\",\n    border: \"solid 5px black\"\n  },\n  // TableStyle: {\n  //   border: \"solid 2 px black\"\n  // },\n  TableTitleStyle: {\n    \"font-weight\": \"bold\",\n    color: \"black\"\n  },\n  TableFontStyle: {\n    color: \"black\"\n  }\n};\n"]},"metadata":{},"sourceType":"module"}