{"ast":null,"code":"var _jsxFileName = \"/Users/keremguventurk/Desktop/northwestern/winter2020/bme390-2/Self-Service-Database-UI/src/views/PatientHistoryPage.jsx\";\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, DropdownButton } from \"react-bootstrap\";\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport TableList from \"./TableList.jsx\";\nimport { apiBaseURL } from \"./Dashboard.jsx\";\n\nconst axios = require(\"axios\");\n/* const filter_categories = [\n    \"Date\",\n    \"Eye Diagnosis\",\n    \"Systemic Diagnosis\",\n    \"Age\",\n    \"Ethnicity\",\n    \"Image Procedure Type\",\n    \"Labs\",\n    \"Medication Generic Name\",\n    \"Medication Therapuetic Name\",\n    \"Vision\",\n    \"Pressure\",\n    \"Exam ID\"\n  ]; */\n//PatientHistorypage displays individual patient history information\n//Feb. 4, 2020 fixed bug for website crashing when clicking on patient ID number\n\n\nconst filter_categories = [\"Date\", \"Eye Diagnosis\", \"Systemic Diagnosis\", \"Labs\", \"Medication Generic Name\", \"Medication Therapuetic Name\", \"Vision\", \"Pressure\", \"Exam ID\"];\nconst frontendToBackend = {\n  \"Eye Diagnosis\": \"eye_diagnosis\",\n  \"Systemic Diagnosis\": \"systemic_diagnosis\",\n  Age: \"age\",\n  Ethnicity: \"ethnicity\",\n  \"Image Procedure Type\": \"image_type\",\n  Labs: \"lab_values\",\n  \"Medication Generic Name\": \"medication_generic_name\",\n  \"Medication Therapuetic Name\": \"medication_therapuetic_name\",\n  \"Left Vision\": \"left_vision\",\n  \"Right Vision\": \"right_vision\",\n  \"Left Pressure\": \"left_pressure\",\n  \"Right Pressure\": \"right_pressure\",\n  Date: \"date\",\n  \"Exam ID\": \"exam_id\"\n}; //purpose is to convert the capitalization and underlines between the frontend and backend\n\nconst backendToFrontend = {};\n\nfor (let key in frontendToBackend) {\n  backendToFrontend[frontendToBackend[key]] = key;\n}\n\nfunction isDict(v) {\n  return typeof v === \"object\" && v !== null && !(v instanceof Array) && !(v instanceof Date);\n} //function compareDates compares dates a and b\n//returns true if date a is later than b, false otherwise\n//dates are in the format of \"Thu, 09 Aug 2018\" without the quotes\n\n\nfunction compareDates(a, b) {\n  let year_a = parseInt(a.substring(12, 16));\n  let month_a = a.substring(8, 11);\n  let day_a = parseInt(a.substring(5, 7));\n  let year_b = parseInt(b.substring(12, 16));\n  let month_b = b.substring(8, 11);\n  let day_b = parseInt(b.substring(5, 7));\n  const months = {\n    Jan: 0,\n    Feb: 1,\n    Mar: 2,\n    Apr: 3,\n    May: 4,\n    Jun: 5,\n    Jul: 6,\n    Aug: 7,\n    Sep: 8,\n    Oct: 9,\n    Nov: 10,\n    Dec: 11\n  };\n\n  if (year_a !== year_b) {\n    return year_a - year_b;\n  }\n\n  if (months[month_a] !== months[month_b]) {\n    return months[month_a] - months[month_b];\n  }\n\n  if (day_a !== day_b) {\n    return day_a - day_b;\n  }\n\n  return 0;\n} //Variables:\n//patientID: The relevant patient ID whose patient history is dislpayed\n//filterCategories\n//selectedFilterCategories\n//tableKey\n//exportPressed\n\n\nclass PatientHistoryPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientID: null,\n      filterCategories: filter_categories,\n      selectedFilterCategories: filter_categories,\n      tableKey: 1,\n      exportPressed: {\n        display: false\n      }\n    };\n    this.getData = this.getData.bind(this);\n    this.editData = this.editData.bind(this);\n    this.getFilters = this.getFilters.bind(this);\n    this.categoryFilterPressed = this.categoryFilterPressed.bind(this);\n    this.getTables = this.getTables.bind(this);\n    this.getSummaryTable = this.getSummaryTable.bind(this);\n    this.backButtonPressed = this.backButtonPressed.bind(this);\n    this.imagesButtonPressed = this.imagesButtonPressed.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.pageStatus.PatientHistoryPage) {\n      return;\n    }\n\n    this.setState({\n      patientID: this.props.pageStatus.PatientHistoryPage.patientID\n    }, () => this.getData());\n  } //sets the state of patientinfo to be the one for the relevant patient ID\n\n\n  getData() {\n    let currentComponent = this;\n    let patientID = this.state.patientID;\n    let link = apiBaseURL + \"/ssd_api/patients?pt_id=\" + patientID;\n    var autToken = \"Basic \" + btoa(this.props.accessToken + \":something\");\n    const options = {\n      url: link,\n      method: 'get',\n      headers: {\n        'Authorization': autToken\n      }\n    };\n    axios(options).then(function (response) {\n      let patientInfo = response.data.result[patientID];\n      currentComponent.setState({\n        patientInfo: patientInfo\n      }, () => {\n        currentComponent.editData();\n      });\n    }).catch(function (error) {\n      console.log(error);\n\n      if (error.message === \"Request failed with status code 401\") {\n        currentComponent.props.backToLoginPage();\n      }\n    });\n  } //sets up the patient info to populate the table on the website\n\n\n  editData() {\n    if (!this.state.patientInfo) {\n      //if patient info is nonexistent, then cannot edit patient info, so return\n      return;\n    }\n\n    let patientInfo = {};\n    let date = [];\n    let category = null;\n\n    for (let key in this.state.patientInfo) {\n      if (key === \"eye_diagnosis\" || key === \"systemic_diagnosis\") {\n        for (let key2 in this.state.patientInfo[key]) {\n          if (this.state.patientInfo[key][key2] !== null) {\n            date = this.state.patientInfo[key][key2].substring(0, 16);\n            patientInfo[date] = {};\n          }\n        }\n      } else if (typeof this.state.patientInfo[key] === \"object\") {\n        for (let i = 0; i < this.state.patientInfo[key].length; i++) {\n          if (isDict(this.state.patientInfo[key][i]) && this.state.patientInfo[key][i].date) {\n            date = this.state.patientInfo[key][i].date.substring(0, 16);\n            patientInfo[date] = {};\n          }\n        }\n      }\n    }\n\n    for (let key in this.state.patientInfo) {\n      if (key === \"eye_diagnosis\" || key === \"systemic_diagnosis\") {\n        for (let key2 in this.state.patientInfo[key]) {\n          if (this.state.patientInfo[key][key2] != null) {\n            date = this.state.patientInfo[key][key2].substring(0, 16);\n\n            if (patientInfo[date]) {\n              patientInfo[date][backendToFrontend[key]] = key2;\n            }\n          }\n        }\n      } else if (key === \"vision\" || key === \"pressure\") {\n        let category1 = null;\n        let category2 = null;\n\n        if (key === \"vision\") {\n          category1 = \"Left Vision\";\n          category2 = \"Right Vision\";\n        } else {\n          category1 = \"Left Pressure\";\n          category2 = \"Right Pressure\";\n        }\n\n        for (let i = 0; i < this.state.patientInfo[key].length; i++) {\n          if (this.state.patientInfo[key][i].date) {\n            date = this.state.patientInfo[key][i].date.substring(0, 16);\n            category = category2;\n\n            if (this.state.patientInfo[key][i].name.search(\"LEFT\") !== -1) {\n              category = category1;\n            }\n\n            patientInfo[date][category] = this.state.patientInfo[key][i].value;\n          }\n        }\n      } else if (key === \"lab_values\") {\n        for (let i = 0; i < this.state.patientInfo[key].length; i++) {\n          if (this.state.patientInfo[key][i].date) {\n            date = this.state.patientInfo[key][i].date.substring(0, 16);\n            category = backendToFrontend[key];\n            patientInfo[date][category] = {\n              \"Lab Name\": this.state.patientInfo[key][i].lab_name,\n              \"Lab Value\": this.state.patientInfo[key][i].lab_value\n            };\n          }\n        }\n      } else if (key === \"medication\") {\n        for (let i = 0; i < this.state.patientInfo[key].length; i++) {\n          if (this.state.patientInfo[key][i].date) {\n            date = this.state.patientInfo[key][i].date.substring(0, 16);\n            patientInfo[date][\"Medication Generic Name\"] = this.state.patientInfo[key][i].generic_name;\n            patientInfo[date][\"Medication Therapeutic Name\"] = this.state.patientInfo[key][i].therapeutic_class;\n          }\n        }\n      }\n    }\n\n    this.setState({\n      patientInfo: patientInfo,\n      loaded: \"true\"\n    });\n  } //uses this.state.filterCategories, containing a list of fitler category names, then recreates a list\n  //with CustomButton elements that is returned as temp_filter_categories\n\n\n  getFilters() {\n    let filter_categories = this.state.filterCategories;\n    let temp_filter_categories = [];\n\n    for (let i = 0; i < filter_categories.length; i++) {\n      let category_name = filter_categories[i];\n\n      if (category_name === \"Date\") {\n        continue;\n      }\n\n      let temp_filter_category = null;\n\n      if (this.state.selectedFilterCategories.indexOf(category_name) !== -1) {\n        temp_filter_category = React.createElement(CustomButton, {\n          style: styles.buttonDivPressed,\n          title: category_name,\n          onClick: e => this.categoryFilterPressed(e),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, \" \", category_name, \" \");\n      } else {\n        temp_filter_category = React.createElement(CustomButton, {\n          style: styles.buttonDiv,\n          title: category_name,\n          onClick: e => this.categoryFilterPressed(e),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }, \" \", category_name, \" \");\n      }\n\n      temp_filter_categories.push(temp_filter_category);\n    }\n\n    return temp_filter_categories;\n  } //If the category filter is pressed, update the state of selectedFilterCategories to what is newly selected\n\n\n  categoryFilterPressed(e) {\n    let category = e.target.title;\n\n    if (category === \"Date\") {\n      return;\n    }\n\n    if (this.state.selectedFilterCategories.indexOf(category) === -1) {\n      this.state.selectedFilterCategories.push(category);\n      this.setState({\n        selectedFilterCategories: this.state.selectedFilterCategories,\n        tableKey: this.state.tableKey + 1\n      });\n    } else {\n      let new_list = this.state.selectedFilterCategories.filter(function (name) {\n        return name !== category;\n      });\n      this.setState({\n        selectedFilterCategories: new_list,\n        tableKey: this.state.tableKey + 1\n      });\n    }\n  } //return tablelist object\n  //If a category exists in the selectedFilterCategories list, then push it into a variable called selectedCategories\n  //Exception for vision and pressure, have both left and right addded to the category.\n\n\n  getTables() {\n    var nullTable = React.createElement(Col, {\n      style: styles.titleText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, \" You Have Not Selected A Patent  \"));\n\n    if (!this.state.loaded || !this.state.patientInfo) {\n      return [nullTable, null];\n    }\n\n    let selectedCategories = [];\n\n    for (let i = 0; i < this.state.filterCategories.length; i++) {\n      let category = this.state.filterCategories[i];\n\n      if (this.state.selectedFilterCategories.indexOf(category) !== -1) {\n        if (category === \"Vision\" || category === \"Pressure\") {\n          selectedCategories.push(\"Left \" + category);\n          selectedCategories.push(\"Right \" + category);\n        } else {\n          selectedCategories.push(category);\n        }\n      }\n    }\n\n    let patientInfo = this.state.patientInfo;\n    let tableData = [];\n\n    for (let date in patientInfo) {\n      let data = patientInfo[date];\n      let tempDateData = [];\n      let isEmpty = true;\n\n      if (selectedCategories.indexOf(\"Date\") !== -1) {\n        tempDateData = [{\n          type: \"string\",\n          text: date\n        }];\n      }\n\n      for (let ii = 1; ii < selectedCategories.length; ii++) {\n        let category = selectedCategories[ii];\n        let value = {\n          type: \"string\",\n          text: \"\"\n        };\n        let tempValue = data[category];\n\n        if (!tempValue) {\n          tempDateData.push(value);\n        } else {\n          isEmpty = false;\n          let text = [];\n\n          if (category === \"Date\") {\n            continue;\n          } else if (category === \"Labs\") {\n            for (let labName in tempValue) {\n              let labValue = tempValue[labName];\n\n              if (labName && labValue) {\n                text.push(labName + \": \" + labValue);\n                text.push(React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 393\n                  },\n                  __self: this\n                }));\n              } else if (labName) {\n                text.push(labName + \": undefined\");\n                text.push(React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 396\n                  },\n                  __self: this\n                }));\n              }\n            }\n          } else {\n            text = tempValue;\n          }\n\n          value[\"text\"] = text;\n          tempDateData.push(value);\n        }\n      }\n\n      if (!isEmpty) {\n        tableData.push(tempDateData);\n      }\n    }\n\n    tableData.sort((a, b) => compareDates(b[0].text, a[0].text));\n    return [React.createElement(TableList, {\n      key: this.state.tableKey,\n      columns: selectedCategories,\n      rows: tableData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }), this.getSummaryTable(tableData[0])];\n  } //used in the getTable() function\n  //returns TableList object\n\n\n  getSummaryTable(patientData) {\n    if (!(patientData && patientData[0])) {\n      return null;\n    }\n\n    const selectedCategories = [\"Date\", \"Eye Diagnosis\", \"Systemic Diagnosis\", \"Age\", \"Ethnicity\", \"Image Procedure Type\", \"Labs\", \"Medication Generic Name\", \"Medication Therapuetic Name\", \"Left Vision\", \"Right Vision\", \"Left Pressure\", \"Right Pressure\", \"Exam ID\"];\n    let date = patientData[0].text;\n    patientData = this.state.patientInfo[date];\n    let patientInfo = this.props.pageStatus.PatientHistoryPage.patientInfo;\n    patientData[\"Ethnicity\"] = patientInfo.ethnicity;\n    patientData[\"Image Procedure Type\"] = patientInfo.image_type;\n    patientData[\"Age\"] = patientInfo.age;\n    patientData[\"Date\"] = date;\n    let tableData = [];\n    let tempDateData = [];\n\n    for (let i = 0; i < selectedCategories.length; i++) {\n      let category = selectedCategories[i];\n      let value = {\n        type: \"string\",\n        text: patientData[category]\n      };\n      let tempText = [];\n\n      if (typeof patientData[category] === \"object\") {\n        for (let j = 0; j < patientData[category].length; j++) {\n          tempText.push(patientData[category][j]);\n          tempText.push(React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 467\n            },\n            __self: this\n          }));\n        }\n\n        value[\"text\"] = tempText;\n      }\n\n      tempDateData.push(value);\n    }\n\n    tableData = [tempDateData];\n    return React.createElement(TableList, {\n      columns: selectedCategories,\n      rows: tableData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    });\n  } //Change page to patients page, with additionalInfo serving as the \"memory\" to retain entered filter information\n\n\n  backButtonPressed() {\n    let newState = {\n      page: \"PatientsPage\"\n    };\n    this.props.changePage(newState);\n  } //To be filled after images are set up\n\n\n  imagesButtonPressed() {\n    let tempPageStatus = this.props.pageStatus;\n    tempPageStatus[\"PatientImagesPage\"] = {\n      patientID: this.state.patientID\n    };\n    let newState = {\n      page: \"PatientImagesPage\",\n      pageStatus: tempPageStatus\n    };\n    this.props.changePage(newState);\n  } //render is what shows on the webpage\n\n\n  render() {\n    let all_filters = this.getFilters();\n    let tables = this.getTables();\n    let table = null;\n    let summaryTable = null;\n\n    if (tables) {\n      table = tables[0];\n      summaryTable = tables[1];\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: styles.titleStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 12,\n      sm: 8,\n      style: styles.titleText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, \"Individual Patient History ID: \", this.state.patientID))), React.createElement(Row, {\n      style: styles.summaryStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }, React.createElement(Col, {\n      style: styles.summaryText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styles.underMainStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, React.createElement(DropdownButton, {\n      style: styles.buttonContainer,\n      title: \"TAKE AN ACTION\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      style: styles.buttonUpperBack,\n      onClick: () => this.backButtonPressed(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }, \"BACK TO PATIENTS PAGE\"), React.createElement(CustomButton, {\n      style: styles.buttonUpperImages,\n      onClick: () => this.imagesButtonPressed(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, \"SEE ALL PATIENTS IMAGES\"))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      style: styles.buttonDivShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }, \" \", \"Shown\", \" \"), React.createElement(CustomButton, {\n      style: styles.buttonDivHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546\n      },\n      __self: this\n    }, \" \", \"Hidden\", \" \")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, all_filters)), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: styles.underTitleStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, summaryTable), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styles.mainDivStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    }, table)))))));\n  }\n\n}\n\nexport default PatientHistoryPage;\nconst styles = {\n  titleStyle: {\n    height: \"10vh\",\n    \"margin-bottom\": \"2vh\"\n  },\n  titleText: {\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"center\",\n    \"font-weight\": \"bold\",\n    \"font-size\": \"30px\"\n  },\n  buttonDiv: {\n    width: \"100%\",\n    margin: \"1vh\",\n    \"background-color\": \"white\",\n    color: \"black\",\n    border: \"solid 2px black\"\n  },\n  buttonDivPressed: {\n    width: \"100%\",\n    margin: \"1vh\",\n    \"background-color\": \"#78deec\",\n    color: \"black\",\n    border: \"solid 2px black\"\n  },\n  buttonDivHide: {\n    width: \"45%\",\n    \"margin-top\": \"1vh\",\n    \"margin-bottom\": \"1vh\",\n    \"margin-left\": \"2vh\",\n    \"background-color\": \"white\",\n    color: \"black\",\n    border: \"solid 2px black\"\n  },\n  buttonDivShow: {\n    width: \"45%\",\n    margin: \"1vh\",\n    \"background-color\": \"#78deec\",\n    color: \"black\",\n    border: \"solid 2px black\"\n  },\n  mainDivStyle: {\n    \"max-height\": \"90vh\",\n    \"max-width\": \"120vh\",\n    overflow: \"scroll\"\n  },\n  underTitleStyle: {\n    \"max-width\": \"120vh\",\n    overflow: \"scroll\"\n  },\n  underMainStyle: {\n    display: \"flex\",\n    \"flex-direction\": \"column\",\n    \"justify-content\": \"flex-end\",\n    \"align-items\": \"flex-end\",\n    \"padding-right\": \"2vh\"\n  },\n  buttonUpperBack: {\n    width: \"40vh\",\n    color: \"black\",\n    border: \"solid 2px black\",\n    \"font-weight\": \"bold\",\n    \"background-color\": \"#eef27c\",\n    \"margin-top\": \"1vh\"\n  },\n  buttonContainer: {\n    width: \"40vh\",\n    color: \"black\",\n    border: \"solid 2px black\",\n    \"font-weight\": \"bold\",\n    \"background-color\": \"#eef27c\"\n  },\n  buttonUpperImages: {\n    width: \"40vh\",\n    color: \"black\",\n    border: \"solid 2px black\",\n    \"font-weight\": \"bold\",\n    \"background-color\": \"#eef27c\",\n    \"margin-top\": \"1vh\",\n    \"margin-bottom\": \"1vh\"\n  }\n};","map":{"version":3,"sources":["/Users/keremguventurk/Desktop/northwestern/winter2020/bme390-2/Self-Service-Database-UI/src/views/PatientHistoryPage.jsx"],"names":["React","Component","Grid","Row","Col","DropdownButton","CustomButton","TableList","apiBaseURL","axios","require","filter_categories","frontendToBackend","Age","Ethnicity","Labs","Date","backendToFrontend","key","isDict","v","Array","compareDates","a","b","year_a","parseInt","substring","month_a","day_a","year_b","month_b","day_b","months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","PatientHistoryPage","constructor","props","state","patientID","filterCategories","selectedFilterCategories","tableKey","exportPressed","display","getData","bind","editData","getFilters","categoryFilterPressed","getTables","getSummaryTable","backButtonPressed","imagesButtonPressed","componentDidMount","pageStatus","setState","currentComponent","link","autToken","btoa","accessToken","options","url","method","headers","then","response","patientInfo","data","result","catch","error","console","log","message","backToLoginPage","date","category","key2","i","length","category1","category2","name","search","value","lab_name","lab_value","generic_name","therapeutic_class","loaded","temp_filter_categories","category_name","temp_filter_category","indexOf","styles","buttonDivPressed","e","buttonDiv","push","target","title","new_list","filter","nullTable","titleText","selectedCategories","tableData","tempDateData","isEmpty","type","text","ii","tempValue","labName","labValue","sort","patientData","ethnicity","image_type","age","tempText","j","newState","page","changePage","tempPageStatus","render","all_filters","tables","table","summaryTable","titleStyle","summaryStyle","summaryText","underMainStyle","buttonContainer","buttonUpperBack","buttonUpperImages","buttonDivShow","buttonDivHide","underTitleStyle","mainDivStyle","height","width","margin","color","border","overflow"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Grid, Row, Col, DropdownButton } from \"react-bootstrap\";\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport TableList from \"./TableList.jsx\";\n\nimport { apiBaseURL } from \"./Dashboard.jsx\";\n\nconst axios = require(\"axios\");\n\n/* const filter_categories = [\n    \"Date\",\n    \"Eye Diagnosis\",\n    \"Systemic Diagnosis\",\n    \"Age\",\n    \"Ethnicity\",\n    \"Image Procedure Type\",\n    \"Labs\",\n    \"Medication Generic Name\",\n    \"Medication Therapuetic Name\",\n    \"Vision\",\n    \"Pressure\",\n    \"Exam ID\"\n  ]; */\n\n//PatientHistorypage displays individual patient history information\n//Feb. 4, 2020 fixed bug for website crashing when clicking on patient ID number\nconst filter_categories = [\n  \"Date\",\n  \"Eye Diagnosis\",\n  \"Systemic Diagnosis\",\n  \"Labs\",\n  \"Medication Generic Name\",\n  \"Medication Therapuetic Name\",\n  \"Vision\",\n  \"Pressure\",\n  \"Exam ID\"\n];\n\nconst frontendToBackend = {\n  \"Eye Diagnosis\": \"eye_diagnosis\",\n  \"Systemic Diagnosis\": \"systemic_diagnosis\",\n  Age: \"age\",\n  Ethnicity: \"ethnicity\",\n  \"Image Procedure Type\": \"image_type\",\n  Labs: \"lab_values\",\n  \"Medication Generic Name\": \"medication_generic_name\",\n  \"Medication Therapuetic Name\": \"medication_therapuetic_name\",\n  \"Left Vision\": \"left_vision\",\n  \"Right Vision\": \"right_vision\",\n  \"Left Pressure\": \"left_pressure\",\n  \"Right Pressure\": \"right_pressure\",\n  Date: \"date\",\n  \"Exam ID\": \"exam_id\"\n};\n\n//purpose is to convert the capitalization and underlines between the frontend and backend\nconst backendToFrontend = {};\nfor (let key in frontendToBackend) {\n  backendToFrontend[frontendToBackend[key]] = key;\n}\n\nfunction isDict(v) {\n  return (\n    typeof v === \"object\" &&\n    v !== null &&\n    !(v instanceof Array) &&\n    !(v instanceof Date)\n  );\n}\n\n//function compareDates compares dates a and b\n//returns true if date a is later than b, false otherwise\n//dates are in the format of \"Thu, 09 Aug 2018\" without the quotes\nfunction compareDates(a, b) {\n  let year_a = parseInt(a.substring(12, 16));\n  let month_a = a.substring(8, 11);\n  let day_a = parseInt(a.substring(5, 7));\n\n  let year_b = parseInt(b.substring(12, 16));\n  let month_b = b.substring(8, 11);\n  let day_b = parseInt(b.substring(5, 7));\n\n  const months = {\n    Jan: 0,\n    Feb: 1,\n    Mar: 2,\n    Apr: 3,\n    May: 4,\n    Jun: 5,\n    Jul: 6,\n    Aug: 7,\n    Sep: 8,\n    Oct: 9,\n    Nov: 10,\n    Dec: 11\n  };\n\n  if (year_a !== year_b) {\n    return year_a - year_b;\n  }\n  if (months[month_a] !== months[month_b]) {\n    return months[month_a] - months[month_b];\n  }\n  if (day_a !== day_b) {\n    return day_a - day_b;\n  }\n  return 0;\n}\n\n//Variables:\n//patientID: The relevant patient ID whose patient history is dislpayed\n//filterCategories\n//selectedFilterCategories\n//tableKey\n//exportPressed\nclass PatientHistoryPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientID: null,\n      filterCategories: filter_categories,\n      selectedFilterCategories: filter_categories,\n      tableKey: 1,\n      exportPressed: {\n        display: false\n      }\n    };\n    this.getData = this.getData.bind(this);\n    this.editData = this.editData.bind(this);\n    this.getFilters = this.getFilters.bind(this);\n    this.categoryFilterPressed = this.categoryFilterPressed.bind(this);\n    this.getTables = this.getTables.bind(this);\n    this.getSummaryTable = this.getSummaryTable.bind(this);\n    this.backButtonPressed = this.backButtonPressed.bind(this);\n    this.imagesButtonPressed = this.imagesButtonPressed.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.pageStatus.PatientHistoryPage) {\n      return\n    }\n    this.setState(\n      {\n        patientID: this.props.pageStatus.PatientHistoryPage.patientID\n      },\n      () => this.getData()\n    );\n  }\n\n  //sets the state of patientinfo to be the one for the relevant patient ID\n  getData() {\n    let currentComponent = this;\n    let patientID = this.state.patientID;\n    let link = apiBaseURL + \"/ssd_api/patients?pt_id=\" + patientID;\n    var autToken = \"Basic \" + btoa(this.props.accessToken + \":something\")\n\n    const options = {\n      url: link,\n      method: 'get',\n      headers: {\n        'Authorization': autToken\n      },\n    };\n\n    axios(options)\n      .then(function (response) {\n        let patientInfo = response.data.result[patientID];\n        currentComponent.setState({ patientInfo: patientInfo }, () => {\n          currentComponent.editData();\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n        if (error.message === \"Request failed with status code 401\") {\n          currentComponent.props.backToLoginPage()\n        }\n      });\n  }\n\n  //sets up the patient info to populate the table on the website\n  editData() {\n    if (!this.state.patientInfo) {\n      //if patient info is nonexistent, then cannot edit patient info, so return\n      return;\n    }\n    let patientInfo = {};\n    let date = [];\n    let category = null;\n    for (let key in this.state.patientInfo) {\n      if (key === \"eye_diagnosis\" || key === \"systemic_diagnosis\") {\n        for (let key2 in this.state.patientInfo[key]) {\n          if (this.state.patientInfo[key][key2] !== null) {\n            date = this.state.patientInfo[key][key2].substring(0, 16);\n            patientInfo[date] = {};\n          }\n        }\n      } else if (typeof this.state.patientInfo[key] === \"object\") {\n        for (let i = 0; i < this.state.patientInfo[key].length; i++) {\n          if (\n            isDict(this.state.patientInfo[key][i]) &&\n            this.state.patientInfo[key][i].date\n          ) {\n            date = this.state.patientInfo[key][i].date.substring(0, 16);\n            patientInfo[date] = {};\n          }\n        }\n      }\n    }\n    for (let key in this.state.patientInfo) {\n      if (key === \"eye_diagnosis\" || key === \"systemic_diagnosis\") {\n        for (let key2 in this.state.patientInfo[key]) {\n          if (this.state.patientInfo[key][key2] != null) {\n            date = this.state.patientInfo[key][key2].substring(0, 16);\n            if (patientInfo[date]) {\n              patientInfo[date][backendToFrontend[key]] = key2;\n            }\n          }\n        }\n      } else if (key === \"vision\" || key === \"pressure\") {\n        let category1 = null;\n        let category2 = null;\n        if (key === \"vision\") {\n          category1 = \"Left Vision\";\n          category2 = \"Right Vision\";\n        } else {\n          category1 = \"Left Pressure\";\n          category2 = \"Right Pressure\";\n        }\n        for (let i = 0; i < this.state.patientInfo[key].length; i++) {\n          if (this.state.patientInfo[key][i].date) {\n            date = this.state.patientInfo[key][i].date.substring(0, 16);\n            category = category2;\n            if (this.state.patientInfo[key][i].name.search(\"LEFT\") !== -1) {\n              category = category1;\n            }\n            patientInfo[date][category] = this.state.patientInfo[key][i].value;\n          }\n        }\n      } else if (key === \"lab_values\") {\n        for (let i = 0; i < this.state.patientInfo[key].length; i++) {\n          if (this.state.patientInfo[key][i].date) {\n            date = this.state.patientInfo[key][i].date.substring(0, 16);\n            category = backendToFrontend[key];\n            patientInfo[date][category] = {\n              \"Lab Name\": this.state.patientInfo[key][i].lab_name,\n              \"Lab Value\": this.state.patientInfo[key][i].lab_value\n            };\n          }\n        }\n      } else if (key === \"medication\") {\n        for (let i = 0; i < this.state.patientInfo[key].length; i++) {\n          if (this.state.patientInfo[key][i].date) {\n            date = this.state.patientInfo[key][i].date.substring(0, 16);\n            patientInfo[date][\n              \"Medication Generic Name\"\n            ] = this.state.patientInfo[key][i].generic_name;\n            patientInfo[date][\n              \"Medication Therapeutic Name\"\n            ] = this.state.patientInfo[key][i].therapeutic_class;\n          }\n        }\n      }\n    }\n    this.setState({\n      patientInfo: patientInfo,\n      loaded: \"true\"\n    });\n  }\n\n  //uses this.state.filterCategories, containing a list of fitler category names, then recreates a list\n  //with CustomButton elements that is returned as temp_filter_categories\n  getFilters() {\n    let filter_categories = this.state.filterCategories;\n    let temp_filter_categories = [];\n    for (let i = 0; i < filter_categories.length; i++) {\n      let category_name = filter_categories[i];\n      if (category_name === \"Date\") {\n        continue\n      }\n      let temp_filter_category = null;\n      if (this.state.selectedFilterCategories.indexOf(category_name) !== -1) {\n        temp_filter_category = (\n          <CustomButton\n            style={styles.buttonDivPressed}\n            title={category_name}\n            onClick={e => this.categoryFilterPressed(e)}\n          >\n            {\" \"}\n            {category_name}{\" \"}\n          </CustomButton>\n        );\n      } else {\n        temp_filter_category = (\n          <CustomButton\n            style={styles.buttonDiv}\n            title={category_name}\n            onClick={e => this.categoryFilterPressed(e)}\n          >\n            {\" \"}\n            {category_name}{\" \"}\n          </CustomButton>\n        );\n      }\n      temp_filter_categories.push(temp_filter_category);\n    }\n    return temp_filter_categories;\n  }\n\n  //If the category filter is pressed, update the state of selectedFilterCategories to what is newly selected\n  categoryFilterPressed(e) {\n    let category = e.target.title;\n    if (category === \"Date\") {\n      return;\n    }\n    if (this.state.selectedFilterCategories.indexOf(category) === -1) {\n      this.state.selectedFilterCategories.push(category);\n      this.setState({\n        selectedFilterCategories: this.state.selectedFilterCategories,\n        tableKey: this.state.tableKey + 1\n      });\n    } else {\n      let new_list = this.state.selectedFilterCategories.filter(function (name) {\n        return name !== category;\n      });\n      this.setState({\n        selectedFilterCategories: new_list,\n        tableKey: this.state.tableKey + 1\n      });\n    }\n  }\n\n  //return tablelist object\n  //If a category exists in the selectedFilterCategories list, then push it into a variable called selectedCategories\n  //Exception for vision and pressure, have both left and right addded to the category.\n  getTables() {\n\n    var nullTable =\n      <Col style={styles.titleText}>\n        <div> You Have Not Selected A Patent  </div>\n      </Col>\n\n    if (!this.state.loaded || !this.state.patientInfo) {\n      return [nullTable, null];\n    }\n\n    let selectedCategories = [];\n    for (let i = 0; i < this.state.filterCategories.length; i++) {\n      let category = this.state.filterCategories[i];\n      if (this.state.selectedFilterCategories.indexOf(category) !== -1) {\n        if (category === \"Vision\" || category === \"Pressure\") {\n          selectedCategories.push(\"Left \" + category);\n          selectedCategories.push(\"Right \" + category);\n        } else {\n          selectedCategories.push(category);\n        }\n      }\n    }\n\n    let patientInfo = this.state.patientInfo;\n    let tableData = [];\n\n    for (let date in patientInfo) {\n      let data = patientInfo[date];\n      let tempDateData = [];\n      let isEmpty = true;\n      if (selectedCategories.indexOf(\"Date\") !== -1) {\n        tempDateData = [\n          {\n            type: \"string\",\n            text: date\n          }\n        ];\n      }\n      for (let ii = 1; ii < selectedCategories.length; ii++) {\n        let category = selectedCategories[ii];\n        let value = {\n          type: \"string\",\n          text: \"\"\n        };\n        let tempValue = data[category];\n        if (!tempValue) {\n          tempDateData.push(value);\n        } else {\n          isEmpty = false;\n          let text = [];\n          if (category === \"Date\") {\n            continue;\n          } else if (category === \"Labs\") {\n            for (let labName in tempValue) {\n              let labValue = tempValue[labName];\n              if (labName && labValue) {\n                text.push(labName + \": \" + labValue);\n                text.push(<br />);\n              } else if (labName) {\n                text.push(labName + \": undefined\");\n                text.push(<br />);\n              }\n            }\n          } else {\n            text = tempValue;\n          }\n          value[\"text\"] = text;\n          tempDateData.push(value);\n        }\n      }\n      if (!isEmpty) {\n        tableData.push(tempDateData);\n      }\n    }\n    tableData.sort((a, b) => compareDates(b[0].text, a[0].text));\n    return [\n      <TableList\n        key={this.state.tableKey}\n        columns={selectedCategories}\n        rows={tableData}\n      ></TableList>,\n      this.getSummaryTable(tableData[0])\n    ];\n  }\n\n  //used in the getTable() function\n  //returns TableList object\n  getSummaryTable(patientData) {\n    if (!(patientData && patientData[0])) {\n      return null;\n    }\n\n    const selectedCategories = [\n      \"Date\",\n      \"Eye Diagnosis\",\n      \"Systemic Diagnosis\",\n      \"Age\",\n      \"Ethnicity\",\n      \"Image Procedure Type\",\n      \"Labs\",\n      \"Medication Generic Name\",\n      \"Medication Therapuetic Name\",\n      \"Left Vision\",\n      \"Right Vision\",\n      \"Left Pressure\",\n      \"Right Pressure\",\n      \"Exam ID\"\n    ];\n\n    let date = patientData[0].text;\n    patientData = this.state.patientInfo[date];\n\n    let patientInfo = this.props.pageStatus.PatientHistoryPage.patientInfo;\n    patientData[\"Ethnicity\"] = patientInfo.ethnicity;\n    patientData[\"Image Procedure Type\"] = patientInfo.image_type;\n    patientData[\"Age\"] = patientInfo.age;\n    patientData[\"Date\"] = date;\n\n    let tableData = [];\n    let tempDateData = [];\n\n    for (let i = 0; i < selectedCategories.length; i++) {\n      let category = selectedCategories[i];\n      let value = {\n        type: \"string\",\n        text: patientData[category]\n      };\n      let tempText = [];\n      if (typeof patientData[category] === \"object\") {\n        for (let j = 0; j < patientData[category].length; j++) {\n          tempText.push(patientData[category][j]);\n          tempText.push(<br />);\n        }\n        value[\"text\"] = tempText;\n      }\n      tempDateData.push(value);\n    }\n    tableData = [tempDateData];\n    return (\n      <TableList columns={selectedCategories} rows={tableData}></TableList>\n    );\n  }\n\n  //Change page to patients page, with additionalInfo serving as the \"memory\" to retain entered filter information\n  backButtonPressed() {\n    let newState = {\n      page: \"PatientsPage\"\n    };\n    this.props.changePage(newState);\n  }\n\n  //To be filled after images are set up\n  imagesButtonPressed() {\n    let tempPageStatus = this.props.pageStatus;\n    tempPageStatus[\"PatientImagesPage\"] = {\n      patientID: this.state.patientID\n    };\n    let newState = {\n      page: \"PatientImagesPage\",\n      pageStatus: tempPageStatus\n    };\n    this.props.changePage(newState);\n  }\n\n  //render is what shows on the webpage\n  render() {\n    let all_filters = this.getFilters();\n    let tables = this.getTables();\n    let table = null;\n    let summaryTable = null;\n    if (tables) {\n      table = tables[0];\n      summaryTable = tables[1];\n    }\n\n    return (\n      <div>\n        <Grid fluid>\n          <Row style={styles.titleStyle}>\n            <Col lg={12} sm={8} style={styles.titleText}>\n              <div>Individual Patient History ID: {this.state.patientID}</div>\n            </Col>\n          </Row>\n          <Row style={styles.summaryStyle}>\n            <Col style={styles.summaryText}>\n              <div style={styles.underMainStyle}>\n                <DropdownButton style={styles.buttonContainer} title=\"TAKE AN ACTION\">\n                  <CustomButton\n                    style={styles.buttonUpperBack}\n                    onClick={() => this.backButtonPressed()}\n                  >\n                    BACK TO PATIENTS PAGE\n                    </CustomButton>\n                  <CustomButton\n                    style={styles.buttonUpperImages}\n                    onClick={() => this.imagesButtonPressed()}\n                  >\n                    SEE ALL PATIENTS IMAGES\n                    </CustomButton>\n                </DropdownButton>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={3}>\n              <Row>\n                <CustomButton style={styles.buttonDivShow}>\n                  {\" \"}\n                  Shown{\" \"}\n                </CustomButton>\n                <CustomButton style={styles.buttonDivHide}>\n                  {\" \"}\n                  Hidden{\" \"}\n                </CustomButton>\n              </Row>\n              <Row>{all_filters}</Row>\n            </Col>\n            <Col sm={9}>\n              <Grid fluid>\n                <Row style={styles.underTitleStyle}>{summaryTable}</Row>\n                <Row>\n                  <div style={styles.mainDivStyle}>{table}</div>\n                </Row>\n              </Grid>\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default PatientHistoryPage;\n\nconst styles = {\n  titleStyle: {\n    height: \"10vh\",\n    \"margin-bottom\": \"2vh\"\n  },\n  titleText: {\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"center\",\n    \"font-weight\": \"bold\",\n    \"font-size\": \"30px\"\n  },\n  buttonDiv: {\n    width: \"100%\",\n    margin: \"1vh\",\n    \"background-color\": \"white\",\n    color: \"black\",\n    border: \"solid 2px black\"\n  },\n  buttonDivPressed: {\n    width: \"100%\",\n    margin: \"1vh\",\n    \"background-color\": \"#78deec\",\n    color: \"black\",\n    border: \"solid 2px black\"\n  },\n  buttonDivHide: {\n    width: \"45%\",\n    \"margin-top\": \"1vh\",\n    \"margin-bottom\": \"1vh\",\n    \"margin-left\": \"2vh\",\n    \"background-color\": \"white\",\n    color: \"black\",\n    border: \"solid 2px black\"\n  },\n  buttonDivShow: {\n    width: \"45%\",\n    margin: \"1vh\",\n    \"background-color\": \"#78deec\",\n    color: \"black\",\n    border: \"solid 2px black\"\n  },\n  mainDivStyle: {\n    \"max-height\": \"90vh\",\n    \"max-width\": \"120vh\",\n    overflow: \"scroll\"\n  },\n  underTitleStyle: {\n    \"max-width\": \"120vh\",\n    overflow: \"scroll\"\n  },\n  underMainStyle: {\n    display: \"flex\",\n    \"flex-direction\": \"column\",\n    \"justify-content\": \"flex-end\",\n    \"align-items\": \"flex-end\",\n    \"padding-right\": \"2vh\"\n  },\n  buttonUpperBack: {\n    width: \"40vh\",\n    color: \"black\",\n    border: \"solid 2px black\",\n    \"font-weight\": \"bold\",\n    \"background-color\": \"#eef27c\",\n    \"margin-top\": \"1vh\"\n  },\n  buttonContainer: {\n    width: \"40vh\",\n    color: \"black\",\n    border: \"solid 2px black\",\n    \"font-weight\": \"bold\",\n    \"background-color\": \"#eef27c\",\n  },\n  buttonUpperImages: {\n    width: \"40vh\",\n    color: \"black\",\n    border: \"solid 2px black\",\n    \"font-weight\": \"bold\",\n    \"background-color\": \"#eef27c\",\n    \"margin-top\": \"1vh\",\n    \"margin-bottom\": \"1vh\"\n  }\n};\n"]},"metadata":{},"sourceType":"module"}